{"ast":null,"code":"//Tests.js------Show chosen Test\nimport React,{useEffect}from'react';import{useSelector,useDispatch}from'react-redux';import{ShowCurrentTest}from\"../showCurrentTest/ShowCurrentTest.js\";import'../tests/Tests.css';import'../scrollToTopBtn/scrollToTopBtn.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var WHY_botton_visibility=null;var congrFinishTest=null;var current_question=null;var count_questions_test=null;var count_correct_answer=null;var list_tests_wrapper=null;var count_time_test=null;var up=null;var renderHTML=function renderHTML(rawHTML){return/*#__PURE__*/React.createElement(\"div\",{dangerouslySetInnerHTML:{__html:rawHTML}});};//----------\nexport function Tests(){function upBtn(){var id_test_up='London_bgr';//console.log('current_question=',current_question);                    \nvar first_test_up=document.getElementById(id_test_up);console.log('Test first_test_up=',first_test_up);first_test_up.scrollIntoView(true);var id_test2='ID'+current_question+currentTest*100+'_question_cont';var first_test_2=document.getElementById(id_test2);first_test_2.current.scrollIntoView=null;//function() {};\nconsole.log('HeaderTestsList first_test_2=',first_test_2);//        first_test_2.scrollIntoView(true);\ndispatch({type:'Tests_UP',payload:{up:true}});}//upBtn\nvar showCurrentTestWork=null;var showHideTest=useSelector(function(store){return store.showHideTest;});var currentTest=useSelector(function(store){return store.currentTest;});congrFinishTest=useSelector(function(store){return store.congrFinishTest;});current_question=useSelector(function(store){return store.current_question;});count_questions_test=useSelector(function(store){return store.count_questions_test;});WHY_botton_visibility=useSelector(function(store){return store.WHY_botton_visibility;});count_correct_answer=useSelector(function(store){return store.count_correct_answer;});list_tests_wrapper=useSelector(function(store){return store.list_tests_wrapper;});count_time_test=useSelector(function(store){return store.count_time_test;});up=useSelector(function(store){return store.up;});var all_correct_answers=count_correct_answer.reduce(function(a,b){//sum of array\nreturn a+b;});//console.log('all_correct_answers =', all_correct_answers);\nvar nameCurrentTest=\"TEST\"+(currentTest+1);var incorrectAnswerTxt=count_questions_test-all_correct_answers+' incorrect answers';//    let greenRectangle = <div id='correct_answer'></div>;\nvar correctAnswerTxt=all_correct_answers+' correct answers';var dispatch=useDispatch();//console.log('count_time_test[count_questions_test-1] =', count_time_test[count_questions_test-1]);\n//time of replying\nvar pos_symbol=count_time_test[count_questions_test-1].indexOf(':');var minutes=count_time_test[count_questions_test-1].substr(0,2);minutes=Number(minutes);if(minutes===0)minutes='';else minutes=minutes+'min';var seconds=count_time_test[count_questions_test-1].substr(pos_symbol+1,2);seconds=Number(seconds);seconds=seconds+'sec';var allTime=minutes+' '+seconds+' - all time';//    allTime = renderHTML(allTime);\nvar userResults=/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"txt_inline\",children:\"Your results are as follows:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"box\",children:[/*#__PURE__*/_jsx(\"div\",{id:\"correct_answer\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"txt_inline\",children:[\" \",correctAnswerTxt]}),/*#__PURE__*/_jsx(\"div\",{id:\"incorrect_answer\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"txt_inline\",children:[\" \",incorrectAnswerTxt]}),/*#__PURE__*/_jsx(\"div\",{id:\"all_time_color\"}),/*#__PURE__*/_jsxs(\"div\",{id:\"all_time\",children:[\"  \",allTime]}),/*#__PURE__*/_jsx(\"br\",{})]})]});if(current_question===count_questions_test)congrFinishTest=/*#__PURE__*/_jsxs(\"div\",{children:[\"Congratulate! You have complited the test. \",userResults,\"If you would like to check any of your answers, you must click on the appropriate \\\"Show me Why\\\" button.\"]});//console.log('test: currentTest=',currentTest);        \nconsole.log('test: current_question=',current_question);console.log('test: count_questions_test=',count_questions_test);useEffect(function(){if(showHideTest==='showHideTest'){var id_test1='ID'+current_question+currentTest*100+'_question_cont';//console.log('current_question=',current_question);                    \nvar first_test=document.getElementById(id_test1);if(current_question<=count_questions_test-1&&list_tests_wrapper==='hidden'&&!up){console.log('test id_test1=',id_test1);first_test.scrollIntoView(true);}console.log('HeaderTestsList up=',up);if(up)upBtn();//cansel first_test.scrollIntoView(true); and go to London_bgr\n};//if\n});//useEffect\nvar footerBtn=null;if(showHideTest==='showHideTest'){showCurrentTestWork=/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(ShowCurrentTest,{}),/*#__PURE__*/_jsx(\"div\",{id:\"congrFinishTest\",children:congrFinishTest})]});footerBtn=/*#__PURE__*/_jsx(\"button\",{id:\"footerBtn\",onClick:upBtn,children:\"UP\"});}else showCurrentTestWork=null;return/*#__PURE__*/_jsxs(\"section\",{id:\"tests_wrapper\",children:[showCurrentTestWork,footerBtn]});}//Tests\n//        <button id='footerBtn' onClick= {() => dispatch({  type: 'Tests_UP',  payload: {up:  true}})}>\n//            <a href=\"#London_bgr\"  onClick= {() => dispatch({  type: 'Tests_UP',  payload: {up:  true}})}>UP</a>","map":{"version":3,"sources":["/home/test/Public/tests/src/components/tests/Tests.js"],"names":["React","useEffect","useSelector","useDispatch","ShowCurrentTest","WHY_botton_visibility","congrFinishTest","current_question","count_questions_test","count_correct_answer","list_tests_wrapper","count_time_test","up","renderHTML","rawHTML","createElement","dangerouslySetInnerHTML","__html","Tests","upBtn","id_test_up","first_test_up","document","getElementById","console","log","scrollIntoView","id_test2","currentTest","first_test_2","current","dispatch","type","payload","showCurrentTestWork","showHideTest","store","all_correct_answers","reduce","a","b","nameCurrentTest","incorrectAnswerTxt","correctAnswerTxt","pos_symbol","indexOf","minutes","substr","Number","seconds","allTime","userResults","id_test1","first_test","footerBtn"],"mappings":"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","sourcesContent":["//Tests.js------Show chosen Test\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport  { ShowCurrentTest } from \"../showCurrentTest/ShowCurrentTest.js\";\nimport '../tests/Tests.css';\nimport '../scrollToTopBtn/scrollToTopBtn.css';\n\nlet WHY_botton_visibility   = null;\n\nlet congrFinishTest         = null;\n\nlet current_question        = null;\n\nlet count_questions_test    = null;\n\nlet count_correct_answer    = null;\n\nlet list_tests_wrapper      = null;\n\nlet count_time_test         = null;\n\nlet up                      = null;\n\nconst renderHTML =  (rawHTML: string) => React.createElement(\"div\", { dangerouslySetInnerHTML: { __html: rawHTML }});//----------\n\nexport function Tests() {\n\n\n    function upBtn(){            \n        let id_test_up = 'London_bgr';  \n//console.log('current_question=',current_question);                    \n        let first_test_up = document.getElementById(id_test_up);\nconsole.log('Test first_test_up=',first_test_up);                 \n        first_test_up.scrollIntoView(true);\n\n        let id_test2 = 'ID'+ current_question + currentTest*100 +  '_question_cont';  \n        let first_test_2 = document.getElementById(id_test2);\n        first_test_2.current.scrollIntoView = null; //function() {};\nconsole.log('HeaderTestsList first_test_2=',first_test_2);                 \n//        first_test_2.scrollIntoView(true);\n\n            dispatch({  type: 'Tests_UP',  payload: {up:  true}});\n\n    }//upBtn\n\n\n\n    let showCurrentTestWork = null;\n\n\n    let showHideTest        = useSelector((store) => store.showHideTest);\n\n    let currentTest         = useSelector((store) => store.currentTest);\n\n    congrFinishTest         = useSelector((store) => store.congrFinishTest);\n\n    current_question        = useSelector((store) => store.current_question);\n\n    count_questions_test    = useSelector((store) => store.count_questions_test);\n\n    WHY_botton_visibility   = useSelector((store) => store.WHY_botton_visibility);\n\n    count_correct_answer    = useSelector((store) => store.count_correct_answer);\n\n    list_tests_wrapper      = useSelector((store) => store.list_tests_wrapper);    \n\n    count_time_test         = useSelector((store) => store.count_time_test);   \n\n    up                      = useSelector((store) => store.up);   \n\n    \n    let all_correct_answers = count_correct_answer.reduce(function(a,b){ //sum of array\n        return a + b;\n    });\n\n//console.log('all_correct_answers =', all_correct_answers);\n\n    let nameCurrentTest     = \"TEST\" + (currentTest+1);\n\n    let incorrectAnswerTxt = (count_questions_test - all_correct_answers) + ' incorrect answers';\n\n//    let greenRectangle = <div id='correct_answer'></div>;\n\n    let correctAnswerTxt = all_correct_answers + ' correct answers';\n\n    let dispatch = useDispatch();  \n\n//console.log('count_time_test[count_questions_test-1] =', count_time_test[count_questions_test-1]);\n\n    //time of replying\n    let pos_symbol = count_time_test[count_questions_test-1].indexOf(':');\n    let minutes = count_time_test[count_questions_test-1].substr(0,2);\n    minutes = Number(minutes);\n    if(minutes === 0) minutes = ''\n    else minutes = minutes + 'min';\n    let seconds = count_time_test[count_questions_test-1].substr(pos_symbol+1,2);\n    seconds = Number(seconds);\n    seconds = seconds + 'sec';  \n    let allTime =  minutes + ' ' + seconds + ' - all time' ;  \n\n//    allTime = renderHTML(allTime);\n\n    let userResults = ( \n        <>\n            <div className='txt_inline'>Your results are as follows:</div>\n            <div className='box'>\n                <div id=\"correct_answer\"></div> \n                <div className='txt_inline'> {correctAnswerTxt}</div> \n                <div id='incorrect_answer'></div>  \n                <div className='txt_inline'> {incorrectAnswerTxt}</div> \n\n                <div id='all_time_color'></div>  \n                <div id='all_time'>  {allTime}</div> \n                <br />\n            </div>\n        </>\n    );\n\n\n    if(current_question === count_questions_test) \n        congrFinishTest = (<div>Congratulate! You have complited the test. {userResults}        \n        If you would like to check any of your answers, you must click on the appropriate \"Show me Why\" button.</div>\n    );        \n\n//console.log('test: currentTest=',currentTest);        \nconsole.log('test: current_question=',current_question);                    \nconsole.log('test: count_questions_test=',count_questions_test);        \n\n\n        useEffect(() => {\n            if(showHideTest === 'showHideTest') {\n                let id_test1 = 'ID'+ current_question + currentTest*100 +  '_question_cont';  \n//console.log('current_question=',current_question);                    \n                let first_test = document.getElementById(id_test1);\n                if((current_question <= count_questions_test-1) && (list_tests_wrapper === 'hidden') && !up) {\nconsole.log('test id_test1=',id_test1);                 \n                    first_test.scrollIntoView(true);\n                }\nconsole.log('HeaderTestsList up=',up); \n                if(up) upBtn(); //cansel first_test.scrollIntoView(true); and go to London_bgr\n\n            };//if\n        })//useEffect\n\n    \n\n    let footerBtn = null;\n\n\n    if(showHideTest === 'showHideTest') {\n        showCurrentTestWork = <div> \n            <ShowCurrentTest /> \n            <div id='congrFinishTest'>{congrFinishTest}</div>\n        </div>\n        footerBtn = \n        <button id='footerBtn' onClick= {upBtn}>\n                UP\n        </button>;\n    }\n    else showCurrentTestWork = null;\n\n    return <section id=\"tests_wrapper\">\n            {showCurrentTestWork}\n            {footerBtn}\n    </section>\n}//Tests\n\n//        <button id='footerBtn' onClick= {() => dispatch({  type: 'Tests_UP',  payload: {up:  true}})}>\n//            <a href=\"#London_bgr\"  onClick= {() => dispatch({  type: 'Tests_UP',  payload: {up:  true}})}>UP</a>"]},"metadata":{},"sourceType":"module"}