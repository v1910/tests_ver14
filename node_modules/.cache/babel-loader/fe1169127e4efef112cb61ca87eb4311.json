{"ast":null,"code":"//HeaderTests.js------------------\nimport React from'react';import{HeaderTestsList}from\"../headerTestsList/HeaderTestsList.js\";import\"./HeaderTests.css\";import{useSelector,useDispatch}from'react-redux';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var list_tests_wrapper=null;var selected_answer=-1;// number of the selected answer in the current question\nvar correct_answer=-1;// number of the correct answer in the current question  \nvar current_question=0;// number of current question ( 0  -  first)\nvar count_time_question=null;var count_questions_test=null;var count_time_test=null;var work=null;export function HeaderTests(){//--------------------------\n//console.log('HeaderTests-----');  \nfunction mouseEnterList(){// mouse cursor is over id=header_menu_tests  --------------\n//console.log('HeaderTests: mouseEnterList--------------')\n//console.log('2 HeaderTests:  list_tests_wrapper=',list_tests_wrapper);\ndispatch({type:'HeaderTests_mouseEnterList',payload:{count_time_question:count_time_question,count_time_test:count_time_test,list_tests_wrapper:'visible',selected_answer:selected_answer,correct_answer:correct_answer,current_question:current_question,count_correct_answer:count_correct_answer}});}//end of mouseEnterList--------------------\nfunction mouseLeaveList(){// mouse cursor is off id=header_menu_tests ------------------\n//console.log('HeaderTests: mouseLeaveList-------')\n//console.log('1 HeaderTests:  list_tests_wrapper=',list_tests_wrapper);        \ndispatch({type:'HeaderTests_mouseLeaveList',payload:{list_tests_wrapper:'hidden'}});}// end of mouseLeaveList\ncount_questions_test=useSelector(function(store){return store.count_questions_test;});list_tests_wrapper=useSelector(function(store){return store.list_tests_wrapper;});var count_correct_answer=Array(count_questions_test).fill(0);// count of correct answers for every question\ncount_time_question=Array(count_questions_test).fill('00:00');// all time for the current question\ncount_time_test=Array(count_questions_test).fill('00:00');// all time for the current test\nvar dispatch=useDispatch();var menuTest=/*#__PURE__*/_jsx(\"div\",{id:\"header_menu_tests\",className:\"header_menu_item\",children:\"Tests\"});list_tests_wrapper=useSelector(function(store){return store.list_tests_wrapper;});//console.log('1 HeaderTests:  list_tests_wrapper=',list_tests_wrapper);\nif(list_tests_wrapper==='visible'){work=/*#__PURE__*/_jsx(\"div\",{id:\"list_tests_wrapper\",style:{visibility:{list_tests_wrapper:list_tests_wrapper}},children:/*#__PURE__*/_jsx(HeaderTestsList,{})});}else work=null;return/*#__PURE__*/_jsxs(\"div\",{id:\"header_menu_tests_cont_id\",onMouseEnter:mouseEnterList,onMouseLeave:mouseLeaveList,children:[menuTest,work]});}//end of HeaderTests","map":{"version":3,"sources":["/home/test/Public/tests/src/components/headerTests/HeaderTests.js"],"names":["React","HeaderTestsList","useSelector","useDispatch","list_tests_wrapper","selected_answer","correct_answer","current_question","count_time_question","count_questions_test","count_time_test","work","HeaderTests","mouseEnterList","dispatch","type","payload","count_correct_answer","mouseLeaveList","store","Array","fill","menuTest","visibility"],"mappings":"AAAA;AAEA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAAQC,eAAR,KAA8B,uCAA9B,CAEA,MAAQ,mBAAR,CAEA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,C,wFAGA,GAAIC,CAAAA,kBAAkB,CAAG,IAAzB,CAEA,GAAIC,CAAAA,eAAe,CAAG,CAAC,CAAvB,CAA2B;AAE3B,GAAIC,CAAAA,cAAc,CAAG,CAAC,CAAtB,CAA0B;AAE1B,GAAIC,CAAAA,gBAAgB,CAAG,CAAvB,CAA2B;AAE3B,GAAIC,CAAAA,mBAAmB,CAAG,IAA1B,CAEA,GAAIC,CAAAA,oBAAoB,CAAG,IAA3B,CAEA,GAAIC,CAAAA,eAAe,CAAG,IAAtB,CAEA,GAAIC,CAAAA,IAAI,CAAG,IAAX,CAGA,MAAO,SAASC,CAAAA,WAAT,EAAuB,CAAC;AAE/B;AAGA,QAASC,CAAAA,cAAT,EAA0B,CAAG;AAE7B;AACA;AAEQC,QAAQ,CAAC,CAAGC,IAAI,CAAE,4BAAT,CACDC,OAAO,CAAE,CACLR,mBAAmB,CAAKA,mBADnB,CAELE,eAAe,CAASA,eAFnB,CAGLN,kBAAkB,CAAM,SAHnB,CAILC,eAAe,CAASA,eAJnB,CAKLC,cAAc,CAAUA,cALnB,CAMLC,gBAAgB,CAAQA,gBANnB,CAOLU,oBAAoB,CAAIA,oBAPnB,CADR,CAAD,CAAR,CAYP;AAGD,QAASC,CAAAA,cAAT,EAA0B,CAAE;AAC5B;AACA;AACQJ,QAAQ,CAAC,CAAGC,IAAI,CAAE,4BAAT,CACGC,OAAO,CAAE,CACLZ,kBAAkB,CAAE,QADf,CADZ,CAAD,CAAR,CAKP;AAEDK,oBAAoB,CAAGP,WAAW,CAAC,SAACiB,KAAD,QAAWA,CAAAA,KAAK,CAACV,oBAAjB,EAAD,CAAlC,CAEAL,kBAAkB,CAAGF,WAAW,CAAC,SAACiB,KAAD,QAAWA,CAAAA,KAAK,CAACf,kBAAjB,EAAD,CAAhC,CAEA,GAAIa,CAAAA,oBAAoB,CAAGG,KAAK,CAACX,oBAAD,CAAL,CAA4BY,IAA5B,CAAiC,CAAjC,CAA3B,CAAiE;AAEjEb,mBAAmB,CAAGY,KAAK,CAACX,oBAAD,CAAL,CAA4BY,IAA5B,CAAiC,OAAjC,CAAtB,CAAkE;AAElEX,eAAe,CAAGU,KAAK,CAACX,oBAAD,CAAL,CAA4BY,IAA5B,CAAiC,OAAjC,CAAlB,CAA6D;AAE7D,GAAIP,CAAAA,QAAQ,CAAGX,WAAW,EAA1B,CAEA,GAAImB,CAAAA,QAAQ,cACR,YAAK,EAAE,CAAC,mBAAR,CAA6B,SAAS,CAAC,kBAAvC,mBADJ,CAOAlB,kBAAkB,CAAGF,WAAW,CAAC,SAACiB,KAAD,QAAWA,CAAAA,KAAK,CAACf,kBAAjB,EAAD,CAAhC,CAEA;AAGA,GAAGA,kBAAkB,GAAK,SAA1B,CAAqC,CACjCO,IAAI,cAAK,YAAK,EAAE,CAAC,oBAAR,CAA6B,KAAK,CAAE,CAACY,UAAU,CAAC,CAACnB,kBAAkB,CAAlBA,kBAAD,CAAZ,CAApC,uBACG,KAAC,eAAD,IADH,EAAT,CAGH,CAJD,IAKKO,CAAAA,IAAI,CAAG,IAAP,CAGL,mBACQ,aAAK,EAAE,CAAC,2BAAR,CAAoC,YAAY,CAAEE,cAAlD,CACoC,YAAY,CAAEK,cADlD,WAEKI,QAFL,CAGKX,IAHL,GADR,CAOC","sourcesContent":["//HeaderTests.js------------------\n\nimport React from 'react';\n\nimport {HeaderTestsList} from \"../headerTestsList/HeaderTestsList.js\";\n\nimport  \"./HeaderTests.css\";\n\nimport { useSelector, useDispatch } from 'react-redux';\n\n\nlet list_tests_wrapper = null;\n\nlet selected_answer = -1;  // number of the selected answer in the current question\n\nlet correct_answer = -1;  // number of the correct answer in the current question  \n\nlet current_question = 0;  // number of current question ( 0  -  first)\n\nlet count_time_question = null;\n\nlet count_questions_test = null;\n\nlet count_time_test = null;\n\nlet work = null;\n\n\nexport function HeaderTests() {//--------------------------\n\n//console.log('HeaderTests-----');  \n\n\nfunction mouseEnterList() {  // mouse cursor is over id=header_menu_tests  --------------\n    \n//console.log('HeaderTests: mouseEnterList--------------')\n//console.log('2 HeaderTests:  list_tests_wrapper=',list_tests_wrapper);\n    \n        dispatch({  type: 'HeaderTests_mouseEnterList', \n                payload: {\n                    count_time_question:    count_time_question, \n                    count_time_test:        count_time_test,\n                    list_tests_wrapper:     'visible', \n                    selected_answer:        selected_answer, \n                    correct_answer:         correct_answer, \n                    current_question:       current_question,\n                    count_correct_answer:   count_correct_answer, \n                }\n        });\n    \n}//end of mouseEnterList--------------------\n    \n    \nfunction mouseLeaveList() { // mouse cursor is off id=header_menu_tests ------------------\n//console.log('HeaderTests: mouseLeaveList-------')\n//console.log('1 HeaderTests:  list_tests_wrapper=',list_tests_wrapper);        \n        dispatch({  type: 'HeaderTests_mouseLeaveList', \n                    payload: {\n                        list_tests_wrapper: 'hidden'\n                    }\n        });\n}// end of mouseLeaveList\n    \ncount_questions_test = useSelector((store) => store.count_questions_test);\n\nlist_tests_wrapper = useSelector((store) => store.list_tests_wrapper);\n\nlet count_correct_answer = Array(count_questions_test).fill(0);  // count of correct answers for every question\n    \ncount_time_question = Array(count_questions_test).fill('00:00');  // all time for the current question\n\ncount_time_test = Array(count_questions_test).fill('00:00'); // all time for the current test\n\nlet dispatch = useDispatch();\n\nlet menuTest = \n    <div id=\"header_menu_tests\"  className=\"header_menu_item\">\n        Tests\n    </div>\n\n\n\nlist_tests_wrapper = useSelector((store) => store.list_tests_wrapper); \n\n//console.log('1 HeaderTests:  list_tests_wrapper=',list_tests_wrapper);\n\n\nif(list_tests_wrapper === 'visible') {\n    work =  (<div id=\"list_tests_wrapper\" style={{visibility:{list_tests_wrapper}}}>\n                <HeaderTestsList />\n            </div>)\n}\nelse work = null;\n\n \nreturn  (\n        <div id=\"header_menu_tests_cont_id\" onMouseEnter={mouseEnterList} \n                                            onMouseLeave={mouseLeaveList}>\n            {menuTest}\n            {work}\n        </div>\n)\n}//end of HeaderTests\n"]},"metadata":{},"sourceType":"module"}