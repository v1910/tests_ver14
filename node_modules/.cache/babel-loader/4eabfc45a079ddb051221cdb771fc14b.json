{"ast":null,"code":"//Statistics.js------------------\n// Show Statistics\nimport React from'react';import'./Statistics.css';import{useSelector,useDispatch}from'react-redux';import{useEffect}from'react';import{ShowCurrentStatistics}from\"../showCurrentStatistics/ShowCurrentStatistics.js\";import{jsx as _jsx}from\"react/jsx-runtime\";var showHideStatistics=null;var statistics_wrapper_visibility=null;var currentStatistics=null;var currentStatisticsServer=null;var all_input_sections=null;var axios=require('axios');export function Statistics(){//console.log('Statistics +++++++++++') \nshowHideStatistics=useSelector(function(store){return store.showHideStatistics;});currentStatistics=useSelector(function(store){return store.currentStatistics;});statistics_wrapper_visibility=useSelector(function(store){return store.statistics_wrapper_visibility;});var dispatch=useDispatch();if(currentStatistics!==null){currentStatisticsServer='/get'+currentStatistics;}else currentStatisticsServer='/home';//console.log('Jokes: currentJokes=',currentJokes);\n//console.log('Jokes: currentJokesServer=',currentJokesServer);\nuseEffect(function(){fetch(currentStatisticsServer).then(function(response){return response.json();}).then(function(statistics){dispatch({type:'Statistics_statistics',payload:{statistics:statistics}});});});useEffect(function(){fetch('/getAllInsertSections').then(function(response){return response.json();}).then(function(all_input_sectionsDB){console.log('Statistics: /getAllInsertSections all_input_sectionsDB=',all_input_sectionsDB);dispatch({type:'Statistics_AllInsertSectionsDB',payload:{all_input_sectionsDB:all_input_sectionsDB[0],all_input_sections:all_input_sectionsDB[0]}});});});all_input_sections={all_input_tests:11,all_input_words:0,all_input_listen:0,all_input_phrases:0,all_input_jokes:0,all_input_statistics:0};axios.post('/postAllInsertSections',{sections:all_input_sections});//console.log('Jokes: showCurrentJokesWork=',showCurrentJokesWork);\nif(showHideStatistics==='showHideStatistics')return/*#__PURE__*/_jsx(\"section\",{id:\"statistics_wrapper\",style:statistics_wrapper_visibility,children:/*#__PURE__*/_jsx(ShowCurrentStatistics,{})});else return/*#__PURE__*/_jsx(\"section\",{id:\"statistics_wrapper\"});}//end of Statistics.js","map":{"version":3,"sources":["/home/test/Public/tests/src/components/statistics/Statistics.js"],"names":["React","useSelector","useDispatch","useEffect","ShowCurrentStatistics","showHideStatistics","statistics_wrapper_visibility","currentStatistics","currentStatisticsServer","all_input_sections","axios","require","Statistics","store","dispatch","fetch","then","response","json","statistics","type","payload","all_input_sectionsDB","console","log","all_input_tests","all_input_words","all_input_listen","all_input_phrases","all_input_jokes","all_input_statistics","post","sections"],"mappings":"AAAA;AACA;AAEA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAO,kBAAP,CAEA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CAEA,OAASC,SAAT,KAA0B,OAA1B,CAEA,OAAUC,qBAAV,KAAuC,mDAAvC,C,2CAEA,GAAIC,CAAAA,kBAAkB,CAAK,IAA3B,CAEA,GAAIC,CAAAA,6BAA6B,CAAG,IAApC,CAEA,GAAIC,CAAAA,iBAAiB,CAAW,IAAhC,CAEA,GAAIC,CAAAA,uBAAuB,CAAK,IAAhC,CAEA,GAAIC,CAAAA,kBAAkB,CAAS,IAA/B,CAEA,GAAMC,CAAAA,KAAK,CAAGC,OAAO,CAAC,OAAD,CAArB,CAEA,MAAO,SAASC,CAAAA,UAAT,EAAsB,CAE7B;AAEIP,kBAAkB,CAAGJ,WAAW,CAAC,SAACY,KAAD,QAAWA,CAAAA,KAAK,CAACR,kBAAjB,EAAD,CAAhC,CAEAE,iBAAiB,CAAGN,WAAW,CAAC,SAACY,KAAD,QAAWA,CAAAA,KAAK,CAACN,iBAAjB,EAAD,CAA/B,CAEAD,6BAA6B,CAAGL,WAAW,CAAC,SAACY,KAAD,QAAWA,CAAAA,KAAK,CAACP,6BAAjB,EAAD,CAA3C,CAGA,GAAIQ,CAAAA,QAAQ,CAAGZ,WAAW,EAA1B,CAGA,GAAGK,iBAAiB,GAAK,IAAzB,CAA+B,CAC3BC,uBAAuB,CAAG,OAASD,iBAAnC,CACH,CAFD,IAEOC,CAAAA,uBAAuB,CAAG,OAA1B,CAKX;AACA;AAIIL,SAAS,CAAC,UAAM,CACZY,KAAK,CAACP,uBAAD,CAAL,CACCQ,IADD,CACM,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EADd,EAECF,IAFD,CAEM,SAAAG,UAAU,CAAI,CAChBL,QAAQ,CAAC,CAACM,IAAI,CAAE,uBAAP,CACTC,OAAO,CAAE,CACLF,UAAU,CAAEA,UADP,CADA,CAAD,CAAR,CAMH,CATD,EAUH,CAXQ,CAAT,CAaAhB,SAAS,CAAC,UAAM,CACZY,KAAK,CAAC,uBAAD,CAAL,CACCC,IADD,CACM,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EADd,EAECF,IAFD,CAEM,SAAAM,oBAAoB,CAAI,CACtCC,OAAO,CAACC,GAAR,CAAY,yDAAZ,CAAsEF,oBAAtE,EACYR,QAAQ,CAAC,CAACM,IAAI,CAAE,gCAAP,CACTC,OAAO,CAAE,CACLC,oBAAoB,CAAEA,oBAAoB,CAAC,CAAD,CADrC,CAELb,kBAAkB,CAAIa,oBAAoB,CAAC,CAAD,CAFrC,CADA,CAAD,CAAR,CAMH,CAVD,EAWH,CAZQ,CAAT,CAcAb,kBAAkB,CAAG,CACjBgB,eAAe,CAAO,EADL,CAEjBC,eAAe,CAAO,CAFL,CAGjBC,gBAAgB,CAAM,CAHL,CAIjBC,iBAAiB,CAAK,CAJL,CAKjBC,eAAe,CAAO,CALL,CAMjBC,oBAAoB,CAAE,CANL,CAArB,CASApB,KAAK,CAACqB,IAAN,CAAW,wBAAX,CAAqC,CACjCC,QAAQ,CAAEvB,kBADuB,CAArC,EAIJ;AAGI,GAAGJ,kBAAkB,GAAK,oBAA1B,CACoB,mBAAQ,gBAAS,EAAE,CAAC,oBAAZ,CAAiC,KAAK,CAAEC,6BAAxC,uBACQ,KAAC,qBAAD,IADR,EAAR,CADpB,IAIoB,oBAAS,gBAAS,EAAE,CAAC,oBAAZ,EAAT,CAGvB","sourcesContent":["//Statistics.js------------------\n// Show Statistics\n\nimport React from 'react';\n\nimport './Statistics.css';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { useEffect } from 'react';\n\nimport  { ShowCurrentStatistics } from \"../showCurrentStatistics/ShowCurrentStatistics.js\";\n\nlet showHideStatistics   = null;\n\nlet statistics_wrapper_visibility = null;\n\nlet currentStatistics         = null;\n\nlet currentStatisticsServer   = null;\n\nlet all_input_sections       = null;\n\nconst axios = require('axios');\n\nexport function Statistics() {\n\n//console.log('Statistics +++++++++++') \n\n    showHideStatistics = useSelector((store) => store.showHideStatistics);\n\n    currentStatistics = useSelector((store) => store.currentStatistics);\n\n    statistics_wrapper_visibility = useSelector((store) => store.statistics_wrapper_visibility);\n\n\n    let dispatch = useDispatch();\n\n   \n    if(currentStatistics !== null) {\n        currentStatisticsServer = '/get' + currentStatistics;\n    } else currentStatisticsServer = '/home';\n\n\n\n\n//console.log('Jokes: currentJokes=',currentJokes);\n//console.log('Jokes: currentJokesServer=',currentJokesServer);\n\n\n\n    useEffect(() => {\n        fetch(currentStatisticsServer)\n        .then(response => response.json())\n        .then(statistics => {\n            dispatch({type: 'Statistics_statistics', \n            payload: {\n                statistics: statistics\n            }\n            })\n\n        })\n    });\n\n    useEffect(() => {\n        fetch('/getAllInsertSections')\n        .then(response => response.json())\n        .then(all_input_sectionsDB => {           \nconsole.log('Statistics: /getAllInsertSections all_input_sectionsDB=',all_input_sectionsDB);            \n            dispatch({type: 'Statistics_AllInsertSectionsDB', \n            payload: {\n                all_input_sectionsDB: all_input_sectionsDB[0],\n                all_input_sections:   all_input_sectionsDB[0]\n            }\n            })\n        })\n    });\n\n    all_input_sections = {\n        all_input_tests:      11,  \n        all_input_words:      0,\n        all_input_listen:     0,\n        all_input_phrases:    0,\n        all_input_jokes:      0,\n        all_input_statistics: 0\n    };\n\n    axios.post('/postAllInsertSections', {\n        sections: all_input_sections\n    })   \n   \n//console.log('Jokes: showCurrentJokesWork=',showCurrentJokesWork);\n\n\n    if(showHideStatistics === 'showHideStatistics')  \n                        return  <section id=\"statistics_wrapper\" style={statistics_wrapper_visibility}>\n                                        <ShowCurrentStatistics />\n                                </section>    \n    else                return   <section id=\"statistics_wrapper\" >\n                                </section>    \n\n}//end of Statistics.js\n"]},"metadata":{},"sourceType":"module"}