{"ast":null,"code":"//footerQuestion.js: Form footer for one question with answer variants \nimport React from\"react\";import{useSelector,useDispatch}from'react-redux';import'./FooterQuestion.css';//import ReactDOM from 'react-dom';\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var state_reply=null;var state_button_close=null;var count_questions_test=null;var currentTest=null;var cAnswers=null;var count_correct_answer=null;var tests=null;var count_time_question=null;// array of question time\nvar count_time_test=null;// array of all test_time\nvar X_setInterval=null;var state_test=null;var WHY_botton_visibility=null;var current_question=null;var congrFinishTest=null;export function FooterQuestion(props){//------------------------------------------------\n// why - show grammer rules (n_reply - key in correct_answers_tests.js) for correct answer \n//      ID - last div in this question = #ID0200_space_question (for first question)\n//      ID_cont - ID container\nfunction why(n_reply,ID,ID_cont,e){//------------------------\n//    let arr_state_button_close_new=[];\n//    let state_reply=[];\n//console.log('FooterQuestion why: n_reply=',  n_reply, 'ID=', ID, 'ID_cont=',ID_cont);  \n//console.log('FooterQuestion why: state_reply=',state_reply)\n//console.log(' state_button_close=', state.state_button_close)\nvar work=state_test.find(function(item){return item===true;});//console.log('FooterQuestion why: state_test=',state_test, '  work=', work);    \nif(work===undefined){for(var i=0;i<count_questions_test;i++){state_reply[i]=' ';state_button_close[i]='0';}//    let arr_state_button_close_new =  state_button_close.slice(props.count_questions_test);\nstate_reply[props.numberQuestion]=cAnswers[n_reply];state_button_close[props.numberQuestion]='1';//show button\n//console.log('1  state_reply=', state_reply)\ndispatch({type:'footerQuestion_why',payload:{state_reply:state_reply,state_button_close:state_button_close}});}}//---end of why================================================\nfunction answer_close(e){// delete the answer for WHY -------------------------\nstate_button_close=Array(count_questions_test).fill(0);// state of close button                                                             \nstate_reply=Array(count_questions_test).fill(' ');// state of close button    \nreply_button='';//console.log('FooterQuestion: state_reply=',state_reply);\n//console.log('FooterQuestion: arr_state_button_close_new=',arr_state_button_close_new);\n//     setState({state_reply: state_reply,\n//                   state_button_close: arr_state_button_close_new\n//    });\ndispatch({type:'footerQuestion_answer_close',payload:{state_reply:state_reply,state_button_close:state_button_close,showHideTest:'showHideTest'}});}//---end of answer_close ============================================\ncount_questions_test=useSelector(function(store){return store.count_questions_test;});currentTest=useSelector(function(store){return store.currentTest;});state_reply=useSelector(function(store){return store.state_reply;}).slice();state_button_close=useSelector(function(store){return store.state_button_close;}).slice();cAnswers=useSelector(function(store){return store.cAnswers;});count_correct_answer=useSelector(function(store){return store.count_correct_answer;});tests=useSelector(function(store){return store.tests;});count_time_question=useSelector(function(store){return store.count_time_question;}).slice();// array of question time\ncount_time_test=useSelector(function(store){return store.count_time_test;}).slice();// array of all test_time\nX_setInterval=useSelector(function(store){return store.X_setInterval;});state_test=useSelector(function(store){return store.state_test;});WHY_botton_visibility=useSelector(function(store){return store.WHY_botton_visibility;});current_question=useSelector(function(store){return store.current_question;});congrFinishTest=useSelector(function(store){return store.congrFinishTest;});//console.log('FooterQuestion: useSelector: state_reply=',state_reply);\nvar dispatch=useDispatch();//console.log('FooterQuestion:  props.numberQuestion=', props.numberQuestion);\n// Transform html-text into text\nvar renderHTML=function renderHTML(rawHTML){return/*#__PURE__*/React.createElement(\"div\",{dangerouslySetInnerHTML:{__html:rawHTML}});};//----------\n//console.log('FooterQuestion:  renderHTML=', renderHTML);                        \n// button WHY\nvar ID_work='ID'+props.numberQuestion+currentTest*100+'_footer_question';var ID_work2='ID'+props.numberQuestion+currentTest*100+'_button_test';var ID_cont='ID'+props.numberQuestion+currentTest*100+'_question_cont';var n_reply=tests[currentTest][props.numberQuestion].R;var ID_work3='ID'+props.numberQuestion+currentTest*100+'_space_question';var reply_button='';var ID_work4='ID'+props.numberQuestion+currentTest*100+'_button_answer_close';//console.log('FooterQuestion:  n_reply=', n_reply, '   props.numberQuestion=',props.numberQuestion, '   currentTest=', currentTest);     \n//console.log('FooterQuestion:  tests[currentTest]=', tests[currentTest]);\n// add <div class=\"number_question\">\nvar ID_work5='ID'+props.numberQuestion+currentTest*100+'_number_question';var innerHTML_work5=' Current entense: '+(props.numberQuestion+1).toString()+' , All entenses: '+count_questions_test.toString();var style_width_work5;if(props.numberQuestion<9)style_width_work5={width:'26px'};else style_width_work5={width:'35px'};//console.log('props.count_correct_answer=',props.count_correct_answer);\n// add <div class=\"correct_answers\">\nvar ID_work6='ID'+props.numberQuestion+currentTest*100+'_correct_answers';var innerHTML_work6;//console.log('props.count_questions_test=',props.count_questions_test)\n//console.log('i=',i)\n//console.log(' state.state_count_correct_answer[i]=', state.state_count_correct_answer[i])      \n//console.log('props.count_correct_answer=',props.count_correct_answer[ props.numberQuestion],'   props.numberQuestion=', props.numberQuestion)    \nvar sum_count_correct_answer=0;for(var i=0;i<=props.numberQuestion;i++){sum_count_correct_answer=sum_count_correct_answer+count_correct_answer[i];}var si=props.numberQuestion.toString();if(count_correct_answer[props.numberQuestion]>=0){switch(si.length){case 1:innerHTML_work6='/'+sum_count_correct_answer;break;case 2:innerHTML_work6=\"/\\xA0\"+sum_count_correct_answer;break;case 3:innerHTML_work6=\"/\\xA0\"+sum_count_correct_answer;break;default:innerHTML_work6=\"/\\xA0\"+sum_count_correct_answer;}}else innerHTML_work6=\"\\xA0\";innerHTML_work6=' All correct answers: '+innerHTML_work6;// add <div class=\"time_question\">\nvar ID_time_qst='ID'+props.numberQuestion+currentTest*100+'_time_question';//    let innerHTML_work7  = count_time_question[props.numberQuestion];\n//console.log('props.numberQuestion=',props.numberQuestion)\n//console.log('innerHTML_work7=',innerHTML_work7)\n// add <div class=\"time_test\">\nvar ID_time_work8='ID'+props.numberQuestion+currentTest*100+'_time_test';//    let innerHTML_work8  = count_time_test[props.numberQuestion];\nif(state_button_close[props.numberQuestion]==='1'){//show button Close\nreply_button=/*#__PURE__*/_jsx(\"div\",{className:\"button_answer_close\",id:ID_work4,onClick:function onClick(e){return answer_close(e);},children:\"CLOSE\"});}if(current_question===count_questions_test-1)WHY_botton_visibility.fill({visibility:\"visible\"});if(current_question===count_questions_test-1)congrFinishTest='Congratulate. You have complited the test. If you would like to check any of your answers, you must click on the appropriate WHY button.';//WHY_botton_visibility = {visibility: 'visible'};\n//console.log('WHY_botton_visibility=',WHY_botton_visibility);\n//console.log('current_question=',current_question, '  count_questions_test=',count_questions_test);\nvar innerHTML_work5_innerHTML_work6=innerHTML_work5+' '+innerHTML_work6;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"footer_question\",id:ID_work,children:[/*#__PURE__*/_jsx(\"div\",{className:\"number_question\",id:ID_work5,style:style_width_work5,children:/*#__PURE__*/_jsx(\"nobr\",{children:innerHTML_work5_innerHTML_work6})}),/*#__PURE__*/_jsx(\"div\",{className:\"time_question\",id:ID_time_qst,children:count_time_question[props.numberQuestion]}),/*#__PURE__*/_jsx(\"span\",{className:\"time_test\",id:ID_time_work8,children:count_time_test[props.numberQuestion]}),/*#__PURE__*/_jsx(\"div\",{className:\"button_test\",id:ID_work2,style:WHY_botton_visibility[props.numberQuestion],onClick:function onClick(e){return why(n_reply,ID_work2,ID_cont,e);},children:\"WHY\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space_question\",id:ID_work3,children:[renderHTML(state_reply[props.numberQuestion]),reply_button]})]});}//---end of FooterQuestion ================================================================\n/*\r\n<span className=\"correct_answers\" id={ID_work6}><nobr>{innerHTML_work6}</nobr></span>\r\n\r\n    dispatch({  type: 'FooterQuestion',   payload: {\r\n                                                       WHY_botton_visibility:   WHY_botton_visibility \r\n                                                    }\r\n            })\r\n\r\n{renderHTML(state_reply[ props.numberQuestion])}\r\n          {reply_button}\r\n\r\n          <div className=\"time_question\" id={ID_time_qst}>{count_time_question[props.numberQuestion]}</div>  \r\n          <div className=\"time_test\" id={ID_time_work8}>{count_time_test[props.numberQuestion]}</div>\r\n*/","map":{"version":3,"sources":["/home/test/Public/tests/src/components/footerQuestion/FooterQuestion.js"],"names":["React","useSelector","useDispatch","state_reply","state_button_close","count_questions_test","currentTest","cAnswers","count_correct_answer","tests","count_time_question","count_time_test","X_setInterval","state_test","WHY_botton_visibility","current_question","congrFinishTest","FooterQuestion","props","why","n_reply","ID","ID_cont","e","work","find","item","undefined","i","numberQuestion","dispatch","type","payload","answer_close","Array","fill","reply_button","showHideTest","store","slice","renderHTML","rawHTML","createElement","dangerouslySetInnerHTML","__html","ID_work","ID_work2","R","ID_work3","ID_work4","ID_work5","innerHTML_work5","toString","style_width_work5","width","ID_work6","innerHTML_work6","sum_count_correct_answer","si","length","ID_time_qst","ID_time_work8","visibility","innerHTML_work5_innerHTML_work6"],"mappings":"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","sourcesContent":["//footerQuestion.js: Form footer for one question with answer variants \r\n\r\nimport React from \"react\";\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport './FooterQuestion.css';\r\n\r\n//import ReactDOM from 'react-dom';\r\n\r\nlet state_reply           = null;\r\nlet state_button_close    = null;\r\nlet count_questions_test  = null;\r\nlet currentTest           = null;\r\nlet cAnswers              = null;\r\nlet count_correct_answer  = null;  \r\nlet tests                 = null;  \r\nlet count_time_question   = null ; // array of question time\r\nlet count_time_test       = null;   // array of all test_time\r\nlet X_setInterval         = null;\r\nlet state_test            = null;\r\nlet WHY_botton_visibility = null;\r\nlet current_question      = null;\r\nlet congrFinishTest       = null;\r\n\r\n\r\nexport function FooterQuestion(props)  {//------------------------------------------------\r\n\r\n  // why - show grammer rules (n_reply - key in correct_answers_tests.js) for correct answer \r\n  //      ID - last div in this question = #ID0200_space_question (for first question)\r\n  //      ID_cont - ID container\r\n  function why(n_reply, ID, ID_cont, e) {//------------------------\r\n//    let arr_state_button_close_new=[];\r\n//    let state_reply=[];\r\n//console.log('FooterQuestion why: n_reply=',  n_reply, 'ID=', ID, 'ID_cont=',ID_cont);  \r\n//console.log('FooterQuestion why: state_reply=',state_reply)\r\n//console.log(' state_button_close=', state.state_button_close)\r\n    let work = state_test.find(item => item === true);\r\n//console.log('FooterQuestion why: state_test=',state_test, '  work=', work);    \r\n    if(work === undefined){    \r\n      for(let i = 0; i < count_questions_test; i++){\r\n        state_reply[i] = ' ';\r\n        state_button_close[i] = '0';\r\n      }\r\n  //    let arr_state_button_close_new =  state_button_close.slice(props.count_questions_test);\r\n\r\n      state_reply[props.numberQuestion] = cAnswers[n_reply];\r\n\r\n      state_button_close[props.numberQuestion] = '1'; //show button\r\n  \r\n//console.log('1  state_reply=', state_reply)\r\n\r\n      dispatch({type: 'footerQuestion_why', \r\n                payload: {\r\n                  state_reply:        state_reply,\r\n                  state_button_close: state_button_close\r\n                }\r\n              });\r\n    }\r\n  }//---end of why================================================\r\n    \r\n  function answer_close(e){  // delete the answer for WHY -------------------------\r\n\r\n    state_button_close = Array(count_questions_test).fill(0);// state of close button                                                             \r\n\r\n    state_reply = Array(count_questions_test).fill(' ');// state of close button    \r\n\r\n    reply_button = '';\r\n\r\n//console.log('FooterQuestion: state_reply=',state_reply);\r\n//console.log('FooterQuestion: arr_state_button_close_new=',arr_state_button_close_new);\r\n\r\n//     setState({state_reply: state_reply,\r\n//                   state_button_close: arr_state_button_close_new\r\n//    });\r\n\r\n    dispatch({type: 'footerQuestion_answer_close', \r\n              payload: {\r\n                state_reply:        state_reply,\r\n                state_button_close: state_button_close,\r\n                showHideTest:       'showHideTest'\r\n              }\r\n            });\r\n\r\n  } //---end of answer_close ============================================\r\n  \r\n\r\n  count_questions_test  = useSelector((store) => store.count_questions_test);\r\n  currentTest           = useSelector((store) => store.currentTest);\r\n  state_reply           = (useSelector((store) => store.state_reply)).slice();\r\n  state_button_close    = (useSelector((store) => store.state_button_close)).slice();\r\n  cAnswers              = useSelector((store) => store.cAnswers);\r\n  count_correct_answer  = useSelector((store) => store.count_correct_answer);  \r\n  tests                 = useSelector((store) => store.tests);  \r\n  count_time_question   = (useSelector((store) => store.count_time_question)).slice(); // array of question time\r\n  count_time_test       = (useSelector((store) => store.count_time_test)).slice();   // array of all test_time\r\n  X_setInterval         = useSelector((store) => store.X_setInterval);\r\n  state_test            = useSelector((store) => store.state_test);\r\n  WHY_botton_visibility = useSelector((store) => store.WHY_botton_visibility);\r\n  current_question      = useSelector((store) => store.current_question);\r\n  congrFinishTest       = useSelector((store) => store.congrFinishTest);\r\n  \r\n    \r\n//console.log('FooterQuestion: useSelector: state_reply=',state_reply);\r\n  \r\n  \r\n  let dispatch = useDispatch();  \r\n\r\n  \r\n\r\n//console.log('FooterQuestion:  props.numberQuestion=', props.numberQuestion);\r\n\r\n    // Transform html-text into text\r\n    const renderHTML =  (rawHTML: string) => React.createElement(\"div\", { dangerouslySetInnerHTML: { __html: rawHTML }});//----------\r\n\r\n//console.log('FooterQuestion:  renderHTML=', renderHTML);                        \r\n    // button WHY\r\n    let ID_work       = 'ID'+  props.numberQuestion + currentTest*100 +  '_footer_question';\r\n    let ID_work2      = 'ID'+  props.numberQuestion + currentTest*100 +  '_button_test';\r\n    let ID_cont       = 'ID'+  props.numberQuestion + currentTest*100 +  '_question_cont';\r\n    let n_reply       = tests[currentTest][props.numberQuestion].R;\r\n    let ID_work3      = 'ID'+  props.numberQuestion + currentTest*100 + '_space_question';\r\n    let reply_button  = '';\r\n    let ID_work4      = 'ID'+  props.numberQuestion + currentTest*100 + '_button_answer_close';\r\n//console.log('FooterQuestion:  n_reply=', n_reply, '   props.numberQuestion=',props.numberQuestion, '   currentTest=', currentTest);     \r\n//console.log('FooterQuestion:  tests[currentTest]=', tests[currentTest]);\r\n    // add <div class=\"number_question\">\r\n    let ID_work5 = 'ID'+  props.numberQuestion + currentTest*100 +  '_number_question';\r\n    let innerHTML_work5 =  ' Current entense: ' + (props.numberQuestion + 1).toString() + ' , All entenses: ' + count_questions_test.toString();\r\n    let style_width_work5; \r\n\r\n    if( props.numberQuestion < 9)  style_width_work5 = {width: '26px'}\r\n    else style_width_work5 = {width: '35px'};\r\n//console.log('props.count_correct_answer=',props.count_correct_answer);\r\n    // add <div class=\"correct_answers\">\r\n    let ID_work6 = 'ID'+  props.numberQuestion + currentTest*100 +  '_correct_answers';\r\n    let innerHTML_work6;\r\n//console.log('props.count_questions_test=',props.count_questions_test)\r\n//console.log('i=',i)\r\n//console.log(' state.state_count_correct_answer[i]=', state.state_count_correct_answer[i])      \r\n//console.log('props.count_correct_answer=',props.count_correct_answer[ props.numberQuestion],'   props.numberQuestion=', props.numberQuestion)    \r\n    let sum_count_correct_answer = 0;\r\n    for(let i = 0; i <=  props.numberQuestion; i++){\r\n      sum_count_correct_answer = sum_count_correct_answer + count_correct_answer[i];\r\n    }\r\n    let si =  props.numberQuestion.toString();\r\n\t\tif(count_correct_answer[ props.numberQuestion] >= 0) {\r\n\t\t\tswitch (si.length) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tinnerHTML_work6  =  '/' + sum_count_correct_answer; \t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tinnerHTML_work6  = '/\\u00A0' + sum_count_correct_answer; \t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\tinnerHTML_work6  = '/\\u00A0' + sum_count_correct_answer; \t\t\r\n\t\t\t\t\tbreak;\t\t\t\t\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tinnerHTML_work6  = '/\\u00A0' + sum_count_correct_answer; \t\t\r\n\t\t\t}\r\n\t\t}\r\n    else \tinnerHTML_work6  = '\\u00A0';\r\n\r\n    innerHTML_work6  = ' All correct answers: ' + innerHTML_work6;\r\n\r\n\r\n    // add <div class=\"time_question\">\r\n    let ID_time_qst = 'ID'+  props.numberQuestion + currentTest*100 +  '_time_question';\r\n\r\n//    let innerHTML_work7  = count_time_question[props.numberQuestion];\r\n\r\n//console.log('props.numberQuestion=',props.numberQuestion)\r\n//console.log('innerHTML_work7=',innerHTML_work7)\r\n    // add <div class=\"time_test\">\r\n    let ID_time_work8 = 'ID'+  props.numberQuestion + currentTest*100 + '_time_test';\r\n  \r\n//    let innerHTML_work8  = count_time_test[props.numberQuestion];\r\n    \r\n    if( state_button_close[ props.numberQuestion] === '1'){ //show button Close\r\n      reply_button = (<div className=\"button_answer_close\" id={ID_work4} onClick={(e) =>  answer_close(e)}>{\"CLOSE\"}</div>);\r\n    }\r\n  \r\n    if(current_question === count_questions_test-1) WHY_botton_visibility.fill({visibility: \"visible\"});\r\n\r\n    if(current_question === count_questions_test-1) \r\n      congrFinishTest = 'Congratulate. You have complited the test. If you would like to check any of your answers, you must click on the appropriate WHY button.';        \r\n\r\n    //WHY_botton_visibility = {visibility: 'visible'};\r\n\r\n//console.log('WHY_botton_visibility=',WHY_botton_visibility);\r\n//console.log('current_question=',current_question, '  count_questions_test=',count_questions_test);\r\n\r\nlet innerHTML_work5_innerHTML_work6 = innerHTML_work5 + ' ' + innerHTML_work6;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"footer_question\" id={ID_work}>\r\n          <div className=\"number_question\" id={ID_work5} style={style_width_work5}><nobr>{innerHTML_work5_innerHTML_work6}</nobr></div>\r\n          <div className=\"time_question\" id={ID_time_qst}>{count_time_question[props.numberQuestion]}</div>  \r\n          <span className=\"time_test\" id={ID_time_work8}>{count_time_test[props.numberQuestion]}</span>\r\n          <div className=\"button_test\"  id={ID_work2} style={WHY_botton_visibility[props.numberQuestion]} onClick={(e) =>  why(n_reply, ID_work2, ID_cont, e)}>{\"WHY\"}</div>\r\n        </div>\r\n        <div className=\"space_question\" id={ID_work3}>\r\n          {renderHTML(state_reply[props.numberQuestion])}\r\n          {reply_button}\r\n        </div>\r\n      </>\r\n    )\r\n\r\n} //---end of FooterQuestion ================================================================\r\n\r\n/*\r\n<span className=\"correct_answers\" id={ID_work6}><nobr>{innerHTML_work6}</nobr></span>\r\n\r\n    dispatch({  type: 'FooterQuestion',   payload: {\r\n                                                       WHY_botton_visibility:   WHY_botton_visibility \r\n                                                    }\r\n            })\r\n\r\n{renderHTML(state_reply[ props.numberQuestion])}\r\n          {reply_button}\r\n\r\n          <div className=\"time_question\" id={ID_time_qst}>{count_time_question[props.numberQuestion]}</div>  \r\n          <div className=\"time_test\" id={ID_time_work8}>{count_time_test[props.numberQuestion]}</div>\r\n*/          \r\n"]},"metadata":{},"sourceType":"module"}