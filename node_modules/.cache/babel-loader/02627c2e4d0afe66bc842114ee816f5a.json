{"ast":null,"code":"//QuestionTest.js------Form one test question\nimport React from\"react\";import{useSelector,useDispatch}from'react-redux';//import ReactDOM from 'react-dom';\nimport{jsx as _jsx}from\"react/jsx-runtime\";var WHY_botton_visibility=null;var count_questions_test=null;var current_question=null;//QuestionTest -  add <ui class=\"question_test\"> \nexport function QuestionTest(props){var currentTest=useSelector(function(store){return store.currentTest;});var tests=useSelector(function(store){return store.tests;});WHY_botton_visibility=useSelector(function(store){return store.WHY_botton_visibility;});current_question=useSelector(function(store){return store.current_question;});count_questions_test=useSelector(function(store){return store.count_questions_test;});//the count of questions in the test\nif(current_question===count_questions_test-1)WHY_botton_visibility={visibility:'visible'};dispatch({type:'QuestionTest',payload:{WHY_botton_visibility:WHY_botton_visibility}});//console.log('QuestionTest: props.numberQuestion=',props.numberQuestion);\n//console.log('numberQuest=',numberQuest);    \n//console.log('QuestionTest: currentTest=',currentTest);    \nvar question=tests[currentTest][props.numberQuestion].Q;var ID_work='ID'+props.numberQuestion+currentTest*100+'_question_test';return/*#__PURE__*/_jsx(\"div\",{id:ID_work,className:\"question_test\",children:question});}// end of QuestionTest","map":{"version":3,"sources":["/home/test/Public/tests/src/components/questionTest/QuestionTest.js"],"names":["React","useSelector","useDispatch","WHY_botton_visibility","count_questions_test","current_question","QuestionTest","props","currentTest","store","tests","visibility","dispatch","type","payload","question","numberQuestion","Q","ID_work"],"mappings":"AAAA;AAEA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CAEA;2CAEA,GAAIC,CAAAA,qBAAqB,CAAO,IAAhC,CACA,GAAIC,CAAAA,oBAAoB,CAAQ,IAAhC,CACA,GAAIC,CAAAA,gBAAgB,CAAY,IAAhC,CAEA;AACA,MAAO,SAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,CAChC,GAAIC,CAAAA,WAAW,CAAGP,WAAW,CAAC,SAACQ,KAAD,QAAWA,CAAAA,KAAK,CAACD,WAAjB,EAAD,CAA7B,CACA,GAAIE,CAAAA,KAAK,CAAGT,WAAW,CAAC,SAACQ,KAAD,QAAWA,CAAAA,KAAK,CAACC,KAAjB,EAAD,CAAvB,CAEAP,qBAAqB,CAAGF,WAAW,CAAC,SAACQ,KAAD,QAAWA,CAAAA,KAAK,CAACN,qBAAjB,EAAD,CAAnC,CACAE,gBAAgB,CAAQJ,WAAW,CAAC,SAACQ,KAAD,QAAWA,CAAAA,KAAK,CAACJ,gBAAjB,EAAD,CAAnC,CACAD,oBAAoB,CAAIH,WAAW,CAAC,SAACQ,KAAD,QAAWA,CAAAA,KAAK,CAACL,oBAAjB,EAAD,CAAnC,CAA4E;AAE5E,GAAGC,gBAAgB,GAAKD,oBAAoB,CAAC,CAA7C,CAAgDD,qBAAqB,CAAG,CAACQ,UAAU,CAAE,SAAb,CAAxB,CAEhDC,QAAQ,CAAC,CAAGC,IAAI,CAAE,cAAT,CAA2BC,OAAO,CAAE,CACzCX,qBAAqB,CAAIA,qBADgB,CAApC,CAAD,CAAR,CAKJ;AACA;AACA;AACI,GAAIY,CAAAA,QAAQ,CAAGL,KAAK,CAACF,WAAD,CAAL,CAAmBD,KAAK,CAACS,cAAzB,EAAyCC,CAAxD,CACA,GAAIC,CAAAA,OAAO,CAAG,KAAMX,KAAK,CAACS,cAAZ,CAA6BR,WAAW,CAAC,GAAzC,CAAgD,gBAA9D,CACA,mBAAO,YAAK,EAAE,CAAEU,OAAT,CAAkB,SAAS,CAAC,eAA5B,UAA6CH,QAA7C,EAAP,CAEH,CAAC","sourcesContent":["//QuestionTest.js------Form one test question\r\n\r\nimport React from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n//import ReactDOM from 'react-dom';\r\n\r\nlet WHY_botton_visibility     = null;\r\nlet count_questions_test      = null;\r\nlet current_question          = null;\r\n\r\n//QuestionTest -  add <ui class=\"question_test\"> \r\nexport function QuestionTest(props) {\r\n    let currentTest = useSelector((store) => store.currentTest); \r\n    let tests = useSelector((store) => store.tests);\r\n\r\n    WHY_botton_visibility = useSelector((store) => store.WHY_botton_visibility);\r\n    current_question      = useSelector((store) => store.current_question);\r\n    count_questions_test  = useSelector((store) => store.count_questions_test); //the count of questions in the test\r\n\r\n    if(current_question === count_questions_test-1) WHY_botton_visibility = {visibility: 'visible'};\r\n\r\n    dispatch({  type: 'QuestionTest',   payload: {\r\n        WHY_botton_visibility:   WHY_botton_visibility \r\n     }\r\n})\r\n\r\n//console.log('QuestionTest: props.numberQuestion=',props.numberQuestion);\r\n//console.log('numberQuest=',numberQuest);    \r\n//console.log('QuestionTest: currentTest=',currentTest);    \r\n    let question = tests[currentTest][props.numberQuestion].Q;\r\n    let ID_work = 'ID'+ props.numberQuestion + currentTest*100 +  '_question_test'; \r\n    return <div id={ID_work} className=\"question_test\">{question}</div>\r\n\r\n} // end of QuestionTest"]},"metadata":{},"sourceType":"module"}