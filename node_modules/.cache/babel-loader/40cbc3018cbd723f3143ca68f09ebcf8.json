{"ast":null,"code":"//HeaderListenList.js------------------\nimport React from'react';import{useSelector,useDispatch}from'react-redux';import{useEffect}from'react';import\"./HeaderListenList.css\";//import  { ShowCurrentTest } from \"../showCurrentTest/ShowCurrentTest.js\";\n//let list_tests_wrapper      = null;\nimport{jsx as _jsx}from\"react/jsx-runtime\";var nAudio=null;var list_listen_wrapper=null;var all_input_sections=null;var all_input_sectionsDB=null;export function HeaderListenList(){//console.log('HeaderTestsList -------------');\nvar dispatch=useDispatch();nAudio=useSelector(function(store){return store.nAudio;});list_listen_wrapper=useSelector(function(store){return store.list_listen_wrapper;});all_input_sections=useSelector(function(store){return store.all_input_sections;});all_input_sectionsDB=useSelector(function(store){return store.all_input_sectionsDB;});/*\n    const currentTests = useSelector((store) => store.currentTest);\n\n    list_tests_wrapper = useSelector((store) => store.list_tests_wrapper); \n*/ //console.log('1 HeaderistenList:  list_listen_wrapper=',list_listen_wrapper);\n//    console.log('HeaderTestsList count_questions_test=',count_questions_test);\nvar work2=[];var work3='';/*\n    useEffect(() => {\n        fetch('/getAllInsertSections')\n        .then(response => response.json())\n        .then(all_input_sectionsDB => {           \n//console.log('Statistics: /getAllInsertSections all_input_sectionsDB=',all_input_sectionsDB);            \n            dispatch({type: 'Statistics_AllInsertSectionsDB', \n            payload: {\n                all_input_sectionsDB: all_input_sectionsDB[0],\n                all_input_sections:   all_input_sectionsDB[0]\n            }\n            })\n        })\n    });\n*/ //console.log('Statistics: /getAllInsertSections all_input_sections=',all_input_sections);            \nvar _loop=function _loop(kk){work3='STORY'+kk;work2[kk-1]=/*#__PURE__*/_jsx(\"div\",{id:work3,class:\"menu_listen_list\",value:kk,onClick:function onClick(){return dispatch({type:'HeaderListenList',payload:{currentAudio:kk-1,showHideTest:'showHideListen',showHideWords:'showHideListen',showHideListen:'showHideListen',showHidePhrases:'showHideListen',showHideJokes:'showHideListen',showHideStatistics:'showHideListen',showHideListenText:false,phrases:'',list_tests_wrapper:'hidden',list_words_wrapper:'hidden',statistics_wrapper_visibility:{display:'none'},phrases_wrapper_visibility:{display:'none'},all_input_sections:{all_input_tests:all_input_sections.all_input_tests,all_input_words:all_input_sections.all_input_words,all_input_listen:all_input_sections.all_input_listen+1,all_input_phrases:all_input_sections.all_input_phrases,all_input_jokes:all_input_sections.all_input_jokes,all_input_statistics:all_input_sections.all_input_statistics}}});},children:work3},kk);};for(var kk=1;kk<=nAudio;kk++){_loop(kk);}if(list_listen_wrapper==='visible')return work2;else return null;}// end of HeaderListenList------------","map":{"version":3,"sources":["/home/test/Public/tests/src/components/headerListenList/HeaderListenList.js"],"names":["React","useSelector","useDispatch","useEffect","nAudio","list_listen_wrapper","all_input_sections","all_input_sectionsDB","HeaderListenList","dispatch","store","work2","work3","kk","type","payload","currentAudio","showHideTest","showHideWords","showHideListen","showHidePhrases","showHideJokes","showHideStatistics","showHideListenText","phrases","list_tests_wrapper","list_words_wrapper","statistics_wrapper_visibility","display","phrases_wrapper_visibility","all_input_tests","all_input_words","all_input_listen","all_input_phrases","all_input_jokes","all_input_statistics"],"mappings":"AAAA;AAEA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CAEA,OAASC,SAAT,KAA0B,OAA1B,CAEA,MAAQ,wBAAR,CAEA;AAGA;2CAEA,GAAIC,CAAAA,MAAM,CAAoB,IAA9B,CAEA,GAAIC,CAAAA,mBAAmB,CAAO,IAA9B,CAEA,GAAIC,CAAAA,kBAAkB,CAAQ,IAA9B,CAEA,GAAIC,CAAAA,oBAAoB,CAAM,IAA9B,CAGA,MAAO,SAASC,CAAAA,gBAAT,EAA4B,CAEnC;AAGI,GAAIC,CAAAA,QAAQ,CAAGP,WAAW,EAA1B,CAGAE,MAAM,CAAoBH,WAAW,CAAC,SAACS,KAAD,QAAWA,CAAAA,KAAK,CAACN,MAAjB,EAAD,CAArC,CAEAC,mBAAmB,CAAOJ,WAAW,CAAC,SAACS,KAAD,QAAWA,CAAAA,KAAK,CAACL,mBAAjB,EAAD,CAArC,CAEAC,kBAAkB,CAAQL,WAAW,CAAC,SAACS,KAAD,QAAWA,CAAAA,KAAK,CAACJ,kBAAjB,EAAD,CAArC,CAEAC,oBAAoB,CAAMN,WAAW,CAAC,SAACS,KAAD,QAAWA,CAAAA,KAAK,CAACH,oBAAjB,EAAD,CAArC,CAGJ;AACA;AACA;AACA;AACA,EArBmC,CAsBnC;AACA;AAEI,GAAII,CAAAA,KAAK,CAAG,EAAZ,CACA,GAAIC,CAAAA,KAAK,CAAG,EAAZ,CACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAzCmC,CA0CnC;AA1CmC,yBA4CvBC,EA5CuB,EA6CvBD,KAAK,CAAG,QAAUC,EAAlB,CACAF,KAAK,CAACE,EAAE,CAAC,CAAJ,CAAL,cAAgB,YAAK,EAAE,CAAED,KAAT,CAAgB,KAAK,CAAC,kBAAtB,CAEmB,KAAK,CAAIC,EAF5B,CAGmB,OAAO,CAAO,yBAAMJ,CAAAA,QAAQ,CAAC,CAAGK,IAAI,CAAE,kBAAT,CACIC,OAAO,CAAE,CACLC,YAAY,CAAQH,EAAE,CAAC,CADlB,CAELI,YAAY,CAAQ,gBAFf,CAGLC,aAAa,CAAO,gBAHf,CAILC,cAAc,CAAM,gBAJf,CAKLC,eAAe,CAAK,gBALf,CAMLC,aAAa,CAAO,gBANf,CAOLC,kBAAkB,CAAE,gBAPf,CAQLC,kBAAkB,CAAE,KARf,CASLC,OAAO,CAAa,EATf,CAULC,kBAAkB,CAAE,QAVf,CAWLC,kBAAkB,CAAE,QAXf,CAYLC,6BAA6B,CAAE,CAACC,OAAO,CAAE,MAAV,CAZ1B,CAaLC,0BAA0B,CAAE,CAACD,OAAO,CAAE,MAAV,CAbvB,CAcLtB,kBAAkB,CACd,CACIwB,eAAe,CAAExB,kBAAkB,CAACwB,eADxC,CAEIC,eAAe,CAAEzB,kBAAkB,CAACyB,eAFxC,CAGIC,gBAAgB,CAAE1B,kBAAkB,CAAC0B,gBAAnB,CAAsC,CAH5D,CAIIC,iBAAiB,CAAE3B,kBAAkB,CAAC2B,iBAJ1C,CAKIC,eAAe,CAAE5B,kBAAkB,CAAC4B,eALxC,CAMIC,oBAAoB,CAAE7B,kBAAkB,CAAC6B,oBAN7C,CAfC,CADb,CAAD,CAAd,EAHjC,UA+BKvB,KA/BL,EAC0BC,EAD1B,CAAhB,CA9CuB,EA4C/B,IAAI,GAAIA,CAAAA,EAAE,CAAG,CAAb,CAAgBA,EAAE,EAAIT,MAAtB,CAA8BS,EAAE,EAAhC,CAAmC,OAA3BA,EAA2B,EAmClC,CAED,GAAGR,mBAAmB,GAAK,SAA3B,CAAsC,MAAOM,CAAAA,KAAP,CAAtC,IACK,OAAO,KAAP,CAER","sourcesContent":["//HeaderListenList.js------------------\n\nimport React from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { useEffect } from 'react';\n\nimport  \"./HeaderListenList.css\";\n\n//import  { ShowCurrentTest } from \"../showCurrentTest/ShowCurrentTest.js\";\n\n\n//let list_tests_wrapper      = null;\n\nlet nAudio                  = null;\n\nlet list_listen_wrapper     = null;\n\nlet all_input_sections      = null;\n\nlet all_input_sectionsDB    = null;\n\n\nexport function HeaderListenList() {\n\n//console.log('HeaderTestsList -------------');\n\n\n    let dispatch = useDispatch();  \n\n    \n    nAudio                  = useSelector((store) => store.nAudio);\n\n    list_listen_wrapper     = useSelector((store) => store.list_listen_wrapper);\n\n    all_input_sections      = useSelector((store) => store.all_input_sections);\n\n    all_input_sectionsDB    = useSelector((store) => store.all_input_sectionsDB);\n\n    \n/*\n    const currentTests = useSelector((store) => store.currentTest);\n\n    list_tests_wrapper = useSelector((store) => store.list_tests_wrapper); \n*/\n//console.log('1 HeaderistenList:  list_listen_wrapper=',list_listen_wrapper);\n//    console.log('HeaderTestsList count_questions_test=',count_questions_test);\n    \n    let work2 = [];\n    let work3 = '';\n/*\n    useEffect(() => {\n        fetch('/getAllInsertSections')\n        .then(response => response.json())\n        .then(all_input_sectionsDB => {           \n//console.log('Statistics: /getAllInsertSections all_input_sectionsDB=',all_input_sectionsDB);            \n            dispatch({type: 'Statistics_AllInsertSectionsDB', \n            payload: {\n                all_input_sectionsDB: all_input_sectionsDB[0],\n                all_input_sections:   all_input_sectionsDB[0]\n            }\n            })\n        })\n    });\n*/\n//console.log('Statistics: /getAllInsertSections all_input_sections=',all_input_sections);            \n\n    for(let kk = 1; kk <= nAudio; kk++){\n            work3 = 'STORY' + kk;\n            work2[kk-1] =  (<div id={work3} class=\"menu_listen_list\" \n                                               key = {kk}\n                                               value = {kk}\n                                               onClick =    {() => dispatch({  type: 'HeaderListenList', \n                                                                                payload: {\n                                                                                    currentAudio:       kk-1, \n                                                                                    showHideTest:       'showHideListen',\n                                                                                    showHideWords:      'showHideListen',  \n                                                                                    showHideListen:     'showHideListen',                                                                                  \n                                                                                    showHidePhrases:    'showHideListen',\n                                                                                    showHideJokes:      'showHideListen',\n                                                                                    showHideStatistics: 'showHideListen',\n                                                                                    showHideListenText: false,\n                                                                                    phrases:            '',\n                                                                                    list_tests_wrapper: 'hidden',\n                                                                                    list_words_wrapper: 'hidden',\n                                                                                    statistics_wrapper_visibility: {display: 'none'},\n                                                                                    phrases_wrapper_visibility: {display: 'none'},                                                                                    \n                                                                                    all_input_sections:  \n                                                                                        {\n                                                                                            all_input_tests: all_input_sections.all_input_tests,\n                                                                                            all_input_words: all_input_sections.all_input_words,\n                                                                                            all_input_listen: all_input_sections.all_input_listen + 1,\n                                                                                            all_input_phrases: all_input_sections.all_input_phrases,\n                                                                                            all_input_jokes: all_input_sections.all_input_jokes,\n                                                                                            all_input_statistics: all_input_sections.all_input_statistics\n                                                                                        }\n                                                                                }\n                                                                            })\n                                                            }\n                            >\n                                {work3}\n                            </div>)\n    }\n\n    if(list_listen_wrapper === 'visible') return work2\n    else return null;\n\n}// end of HeaderListenList------------\n\n\n"]},"metadata":{},"sourceType":"module"}