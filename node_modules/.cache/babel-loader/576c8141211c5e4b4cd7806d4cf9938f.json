{"ast":null,"code":"//Tests.js------Show chosen Test\nimport React,{useEffect}from'react';import{useSelector}from'react-redux';import{ShowCurrentTest}from\"../showCurrentTest/ShowCurrentTest.js\";import'../tests/Tests.css';import'../scrollToTopBtn/scrollToTopBtn.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var WHY_botton_visibility=null;var congrFinishTest=null;var current_question=null;var count_questions_test=null;export function Tests(){var showCurrentTestWork=null;var showHideTest=useSelector(function(store){return store.showHideTest;});var currentTest=useSelector(function(store){return store.currentTest;});congrFinishTest=useSelector(function(store){return store.congrFinishTest;});current_question=useSelector(function(store){return store.current_question;});count_questions_test=useSelector(function(store){return store.count_questions_test;});WHY_botton_visibility=useSelector(function(store){return store.WHY_botton_visibility;});var nameCurrentTest=\"TEST\"+(currentTest+1);//    if(WHY_botton_visibility[0] == {visibility: \"visible\"})\n//        congrFinishTest = 'Congratulate! You have complited the test. If you would like to check any of your answers, you must click on the appropriate WHY button.';\nif(current_question===count_questions_test)congrFinishTest='Congratulate! You have complited the test. If you would like to check any of your answers, you must click on the appropriate WHY button.';//console.log('current_question=',current_question);        \n//console.log('count_questions_test=',count_questions_test);        \n//console.log('congrFinishTest=',congrFinishTest);\nif(showHideTest==='showHideTest')showCurrentTestWork=/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"topicSection\",children:[nameCurrentTest,\", level B1\",/*#__PURE__*/_jsx(\"br\",{}),\"Choose the correct option for each sentence\",/*#__PURE__*/_jsx(\"hr\",{})]}),/*#__PURE__*/_jsx(ShowCurrentTest,{}),/*#__PURE__*/_jsx(\"div\",{id:\"congrFinishTest\",children:congrFinishTest}),/*#__PURE__*/_jsx(\"button\",{id:\"footerBtn\",children:/*#__PURE__*/_jsx(\"a\",{href:\"#London_bgr\",children:\"UP\"})})]});else showCurrentTestWork=null;return/*#__PURE__*/_jsx(\"section\",{id:\"tests_wrapper\",children:showCurrentTestWork});}//        <button id='scrollToTopBtn' title='Go to top'>Top</button>\n//<a href=\"#Tests\">Home</a>","map":{"version":3,"sources":["/home/test/Public/tests/src/components/tests/Tests.js"],"names":["React","useEffect","useSelector","ShowCurrentTest","WHY_botton_visibility","congrFinishTest","current_question","count_questions_test","Tests","showCurrentTestWork","showHideTest","store","currentTest","nameCurrentTest"],"mappings":"AAAA;AAEA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAAUC,eAAV,KAAiC,uCAAjC,CACA,MAAO,oBAAP,CACA,MAAO,sCAAP,C,wFAEA,GAAIC,CAAAA,qBAAqB,CAAG,IAA5B,CAEA,GAAIC,CAAAA,eAAe,CAAG,IAAtB,CAEA,GAAIC,CAAAA,gBAAgB,CAAG,IAAvB,CAEA,GAAIC,CAAAA,oBAAoB,CAAG,IAA3B,CAEA,MAAO,SAASC,CAAAA,KAAT,EAAiB,CAEpB,GAAIC,CAAAA,mBAAmB,CAAG,IAA1B,CAGA,GAAIC,CAAAA,YAAY,CAAUR,WAAW,CAAC,SAACS,KAAD,QAAWA,CAAAA,KAAK,CAACD,YAAjB,EAAD,CAArC,CAEA,GAAIE,CAAAA,WAAW,CAAWV,WAAW,CAAC,SAACS,KAAD,QAAWA,CAAAA,KAAK,CAACC,WAAjB,EAAD,CAArC,CAEAP,eAAe,CAAWH,WAAW,CAAC,SAACS,KAAD,QAAWA,CAAAA,KAAK,CAACN,eAAjB,EAAD,CAArC,CAEAC,gBAAgB,CAAUJ,WAAW,CAAC,SAACS,KAAD,QAAWA,CAAAA,KAAK,CAACL,gBAAjB,EAAD,CAArC,CAEAC,oBAAoB,CAAML,WAAW,CAAC,SAACS,KAAD,QAAWA,CAAAA,KAAK,CAACJ,oBAAjB,EAAD,CAArC,CAEAH,qBAAqB,CAAKF,WAAW,CAAC,SAACS,KAAD,QAAWA,CAAAA,KAAK,CAACP,qBAAjB,EAAD,CAArC,CAGA,GAAIS,CAAAA,eAAe,CAAO,QAAUD,WAAW,CAAC,CAAtB,CAA1B,CAEJ;AACA;AAEI,GAAGN,gBAAgB,GAAKC,oBAAxB,CACIF,eAAe,CAAG,0IAAlB,CAGR;AACA;AACA;AAEI,GAAGK,YAAY,GAAK,cAApB,CACID,mBAAmB,cAAG,oCAClB,aAAK,SAAS,CAAC,cAAf,WACKI,eADL,2BAEI,aAFJ,4DAII,aAJJ,GADkB,cAOlB,KAAC,eAAD,IAPkB,cAQlB,YAAK,EAAE,CAAC,iBAAR,UAA2BR,eAA3B,EARkB,cASlB,eAAQ,EAAE,CAAC,WAAX,uBAAuB,UAAG,IAAI,CAAC,aAAR,gBAAvB,EATkB,GAAtB,CADJ,IAYKI,CAAAA,mBAAmB,CAAG,IAAtB,CAEL,mBAAO,gBAAS,EAAE,CAAC,eAAZ,UAEFA,mBAFE,EAAP,CAKH,CAED;AACA","sourcesContent":["//Tests.js------Show chosen Test\n\nimport React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport  { ShowCurrentTest } from \"../showCurrentTest/ShowCurrentTest.js\";\nimport '../tests/Tests.css';\nimport '../scrollToTopBtn/scrollToTopBtn.css';\n\nlet WHY_botton_visibility = null;\n\nlet congrFinishTest = null;\n\nlet current_question = null;\n\nlet count_questions_test = null;\n\nexport function Tests() {\n\n    let showCurrentTestWork = null;\n\n\n    let showHideTest        = useSelector((store) => store.showHideTest);\n\n    let currentTest         = useSelector((store) => store.currentTest);\n\n    congrFinishTest         = useSelector((store) => store.congrFinishTest);\n\n    current_question        = useSelector((store) => store.current_question);\n\n    count_questions_test    = useSelector((store) => store.count_questions_test);\n\n    WHY_botton_visibility   = useSelector((store) => store.WHY_botton_visibility);\n\n\n    let nameCurrentTest     = \"TEST\" + (currentTest+1);\n\n//    if(WHY_botton_visibility[0] == {visibility: \"visible\"})\n//        congrFinishTest = 'Congratulate! You have complited the test. If you would like to check any of your answers, you must click on the appropriate WHY button.';\n\n    if(current_question === count_questions_test) \n        congrFinishTest = 'Congratulate! You have complited the test. If you would like to check any of your answers, you must click on the appropriate WHY button.';        \n\n\n//console.log('current_question=',current_question);        \n//console.log('count_questions_test=',count_questions_test);        \n//console.log('congrFinishTest=',congrFinishTest);\n\n    if(showHideTest === 'showHideTest') \n        showCurrentTestWork = <div> \n            <div className='topicSection'> \n                {nameCurrentTest}, level B1 \n                <br />\n                Choose the correct option for each sentence\n                <hr />\n            </div> \n            <ShowCurrentTest /> \n            <div id='congrFinishTest'>{congrFinishTest}</div>\n            <button id='footerBtn'><a href=\"#London_bgr\">UP</a></button>\n        </div>\n    else showCurrentTestWork = null;\n\n    return <section id=\"tests_wrapper\">\n\n        {showCurrentTestWork}\n\n    </section>\n}\n\n//        <button id='scrollToTopBtn' title='Go to top'>Top</button>\n//<a href=\"#Tests\">Home</a>"]},"metadata":{},"sourceType":"module"}