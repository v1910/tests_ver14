{"ast":null,"code":"//Tests.js------Show chosen Test\nimport React,{useEffect}from'react';import{useSelector}from'react-redux';import{ShowCurrentTest}from\"../showCurrentTest/ShowCurrentTest.js\";import'../tests/Tests.css';import'../scrollToTopBtn/scrollToTopBtn.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var WHY_botton_visibility=null;var congrFinishTest=null;var current_question=null;var count_questions_test=null;var count_correct_answer=null;var list_tests_wrapper=null;var count_time_test=null;var renderHTML=function renderHTML(rawHTML){return/*#__PURE__*/React.createElement(\"div\",{dangerouslySetInnerHTML:{__html:rawHTML}});};//----------\nexport function Tests(){var showCurrentTestWork=null;var showHideTest=useSelector(function(store){return store.showHideTest;});var currentTest=useSelector(function(store){return store.currentTest;});congrFinishTest=useSelector(function(store){return store.congrFinishTest;});current_question=useSelector(function(store){return store.current_question;});count_questions_test=useSelector(function(store){return store.count_questions_test;});WHY_botton_visibility=useSelector(function(store){return store.WHY_botton_visibility;});count_correct_answer=useSelector(function(store){return store.count_correct_answer;});list_tests_wrapper=useSelector(function(store){return store.list_tests_wrapper;});count_time_test=useSelector(function(store){return store.count_time_test;});var all_correct_answers=count_correct_answer.reduce(function(a,b){//sum of array\nreturn a+b;});//console.log('all_correct_answers =', all_correct_answers);\nvar nameCurrentTest=\"TEST\"+(currentTest+1);var incorrectAnswerTxt=count_questions_test-all_correct_answers+' incorrect answers';//    let greenRectangle = <div id='correct_answer'></div>;\nvar correctAnswerTxt=all_correct_answers+' correct answers';console.log('count_time_test[count_questions_test-1] =',count_time_test[count_questions_test-1]);var pos_symbol=count_time_test[count_questions_test-1].indexOf(':');var minutes=count_time_test[count_questions_test-1].substring(0,2);var seconds=count_time_test[count_questions_test-1].substring(pos_symbol+1,2);console.log('minutes =',minutes);console.log('seconds =',seconds);if(minutes==='00')minutes='';else minutes=minutes+'min';var allTime='All time: '+minutes+' '+seconds+'sec';//    allTime = renderHTML(allTime);\nvar userResults=/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"txt_inline\",children:\"Your results are as follows:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"box\",children:[/*#__PURE__*/_jsx(\"div\",{id:\"correct_answer\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"txt_inline\",children:[\" \",correctAnswerTxt]}),/*#__PURE__*/_jsx(\"div\",{id:\"incorrect_answer\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"txt_inline\",children:[\" \",incorrectAnswerTxt]}),/*#__PURE__*/_jsxs(\"div\",{id:\"all_time\",children:[\" \",allTime]}),/*#__PURE__*/_jsx(\"br\",{})]})]});if(current_question===count_questions_test)congrFinishTest=/*#__PURE__*/_jsxs(\"div\",{children:[\"Congratulate! You have complited the test. \",userResults,\"If you would like to check any of your answers, you must click on the appropriate \\\"Show me Why\\\" button.\"]});//console.log('currentTest=',currentTest);        \n//console.log('count_questions_test=',count_questions_test);        \nuseEffect(function(){if(showHideTest==='showHideTest'){var id_test1='ID'+current_question+currentTest*100+'_question_cont';//console.log('current_question=',current_question);                    \nvar first_test=document.getElementById(id_test1);if(current_question<=count_questions_test-1&&list_tests_wrapper==='hidden'){//console.log('HeaderTestsList id_test1=',id_test1);                 \nfirst_test.scrollIntoView(true);}};//if\n});//useEffect\nvar footerBtn=null;if(showHideTest==='showHideTest'){showCurrentTestWork=/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"topicSection\",children:[nameCurrentTest,\", level B1\",/*#__PURE__*/_jsx(\"br\",{}),\"Choose the correct option for each sentence\",/*#__PURE__*/_jsx(\"hr\",{})]}),/*#__PURE__*/_jsx(ShowCurrentTest,{}),/*#__PURE__*/_jsx(\"div\",{id:\"congrFinishTest\",children:congrFinishTest})]});footerBtn=/*#__PURE__*/_jsx(\"button\",{id:\"footerBtn\",children:/*#__PURE__*/_jsx(\"a\",{href:\"#London_bgr\",children:\"UP\"})});}else showCurrentTestWork=null;return/*#__PURE__*/_jsxs(\"section\",{id:\"tests_wrapper\",children:[showCurrentTestWork,footerBtn]});}//Tests","map":{"version":3,"sources":["/home/test/Public/tests/src/components/tests/Tests.js"],"names":["React","useEffect","useSelector","ShowCurrentTest","WHY_botton_visibility","congrFinishTest","current_question","count_questions_test","count_correct_answer","list_tests_wrapper","count_time_test","renderHTML","rawHTML","createElement","dangerouslySetInnerHTML","__html","Tests","showCurrentTestWork","showHideTest","store","currentTest","all_correct_answers","reduce","a","b","nameCurrentTest","incorrectAnswerTxt","correctAnswerTxt","console","log","pos_symbol","indexOf","minutes","substring","seconds","allTime","userResults","id_test1","first_test","document","getElementById","scrollIntoView","footerBtn"],"mappings":"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","sourcesContent":["//Tests.js------Show chosen Test\n\nimport React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport  { ShowCurrentTest } from \"../showCurrentTest/ShowCurrentTest.js\";\nimport '../tests/Tests.css';\nimport '../scrollToTopBtn/scrollToTopBtn.css';\n\nlet WHY_botton_visibility   = null;\n\nlet congrFinishTest         = null;\n\nlet current_question        = null;\n\nlet count_questions_test    = null;\n\nlet count_correct_answer    = null;\n\nlet list_tests_wrapper      = null;\n\nlet count_time_test         = null;\n\nconst renderHTML =  (rawHTML: string) => React.createElement(\"div\", { dangerouslySetInnerHTML: { __html: rawHTML }});//----------\n\nexport function Tests() {\n\n    let showCurrentTestWork = null;\n\n\n    let showHideTest        = useSelector((store) => store.showHideTest);\n\n    let currentTest         = useSelector((store) => store.currentTest);\n\n    congrFinishTest         = useSelector((store) => store.congrFinishTest);\n\n    current_question        = useSelector((store) => store.current_question);\n\n    count_questions_test    = useSelector((store) => store.count_questions_test);\n\n    WHY_botton_visibility   = useSelector((store) => store.WHY_botton_visibility);\n\n    count_correct_answer    = useSelector((store) => store.count_correct_answer);\n\n    list_tests_wrapper      = useSelector((store) => store.list_tests_wrapper);    \n\n    count_time_test         = useSelector((store) => store.count_time_test);   \n\n    \n    let all_correct_answers = count_correct_answer.reduce(function(a,b){ //sum of array\n        return a + b;\n    });\n\n//console.log('all_correct_answers =', all_correct_answers);\n\n    let nameCurrentTest     = \"TEST\" + (currentTest+1);\n\n    let incorrectAnswerTxt = (count_questions_test - all_correct_answers) + ' incorrect answers';\n\n//    let greenRectangle = <div id='correct_answer'></div>;\n\n    let correctAnswerTxt = all_correct_answers + ' correct answers';\n\n\nconsole.log('count_time_test[count_questions_test-1] =', count_time_test[count_questions_test-1]);\n\n\n    let pos_symbol = count_time_test[count_questions_test-1].indexOf(':');\n    let minutes = count_time_test[count_questions_test-1].substring(0,2);\n    let seconds = count_time_test[count_questions_test-1].substring(pos_symbol+1,2);\nconsole.log('minutes =', minutes);    \nconsole.log('seconds =', seconds);  \n    if(minutes === '00') minutes = ''\n    else minutes = minutes + 'min';\n    \n    let allTime = 'All time: ' + minutes + ' ' + seconds + 'sec';  \n\n//    allTime = renderHTML(allTime);\n\n    let userResults = ( \n        <>\n            <div className='txt_inline'>Your results are as follows:</div>\n            <div className='box'>\n                <div id=\"correct_answer\"></div> \n                <div className='txt_inline'> {correctAnswerTxt}</div> \n                <div id='incorrect_answer'></div>  \n                <div className='txt_inline'> {incorrectAnswerTxt}</div> \n                <div id='all_time'> {allTime}</div> \n                <br />\n            </div>\n        </>\n    );\n\n\n    if(current_question === count_questions_test) \n        congrFinishTest = (<div>Congratulate! You have complited the test. {userResults}        \n        If you would like to check any of your answers, you must click on the appropriate \"Show me Why\" button.</div>\n    );        \n\n//console.log('currentTest=',currentTest);        \n//console.log('count_questions_test=',count_questions_test);        \n\n\n        useEffect(() => {\n            if(showHideTest === 'showHideTest') {\n                let id_test1 = 'ID'+ current_question + currentTest*100 +  '_question_cont';  \n//console.log('current_question=',current_question);                    \n                let first_test = document.getElementById(id_test1);\n                if((current_question <= count_questions_test-1) && (list_tests_wrapper === 'hidden')) {\n//console.log('HeaderTestsList id_test1=',id_test1);                 \n                    first_test.scrollIntoView(true);\n                }\n            };//if\n        })//useEffect\n\n    \n\n    let footerBtn = null;\n\n\n    if(showHideTest === 'showHideTest') {\n        showCurrentTestWork = <div> \n            <div className='topicSection'> \n                {nameCurrentTest}, level B1 \n                <br />\n                Choose the correct option for each sentence\n                <hr />\n            </div> \n            <ShowCurrentTest /> \n            <div id='congrFinishTest'>{congrFinishTest}</div>\n        </div>\n        footerBtn = <button id='footerBtn'><a href=\"#London_bgr\">UP</a></button>;\n    }\n    else showCurrentTestWork = null;\n\n    return <section id=\"tests_wrapper\">\n            {showCurrentTestWork}\n            {footerBtn}\n    </section>\n}//Tests\n"]},"metadata":{},"sourceType":"module"}