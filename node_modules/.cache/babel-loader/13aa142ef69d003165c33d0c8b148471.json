{"ast":null,"code":"import _asyncToGenerator from\"/home/test/Public/tests/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/home/test/Public/tests/node_modules/@babel/runtime/regenerator/index.js\";//Phrases.js------------------\n// Show Phrases\nimport React from'react';import'./Phrases.css';import{useSelector,useDispatch}from'react-redux';import{useEffect}from'react';import{ShowCurrentPhrases}from\"../showCurrentPhrases/ShowCurrentPhrases.js\";import{upButton}from\"../upButton/upButton.js\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var showHidePhrases=null;var showCurrentPhrasesWork=null;var currentPhrases=null;var currentPhrasesServer=null;var phrases_wrapper_visibility=null;export function Phrases(){//console.log('Phrases +++++++++++')        \nshowHidePhrases=useSelector(function(store){return store.showHidePhrases;});currentPhrases=useSelector(function(store){return store.currentPhrases;});phrases_wrapper_visibility=useSelector(function(store){return store.phrases_wrapper_visibility;});var dispatch=useDispatch();if(currentPhrases!==null){currentPhrasesServer='/get'+currentPhrases;}else currentPhrasesServer='/home';//console.log('Phrases: currentPhrases=',currentPhrases);\n//console.log('Phrases: currentPhrasesServer=',currentPhrasesServer);\n//console.log('Phrases: showHidePhrases=',showHidePhrases);     \n//console.log('Phrases: showCurrentPhrasesWork=',showCurrentPhrasesWork);\nvar axios=require('axios');function makeGetRequest(){return _makeGetRequest.apply(this,arguments);}function _makeGetRequest(){_makeGetRequest=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(currentPhrasesServer);case 2:res=_context.sent;data=res.data;dispatch({type:'ShowCurrentPhrases',payload:{phrases:data}});case 5:case\"end\":return _context.stop();}}},_callee);}));return _makeGetRequest.apply(this,arguments);}makeGetRequest();var phrases_button=/*#__PURE__*/_jsx(\"button\",{id:\"footerBtnListen\",onClick:upButton,children:\"UP\"});if(showHidePhrases==='showHidePhrases')showCurrentPhrasesWork=/*#__PURE__*/_jsx(ShowCurrentPhrases,{});else{showCurrentPhrasesWork=null;phrases_button=null;}return/*#__PURE__*/_jsxs(\"section\",{id:\"phrases_wrapper\",children:[showCurrentPhrasesWork,phrases_button]});}//end of Phrases.js","map":{"version":3,"sources":["/home/test/Public/tests/src/components/phrases/Phrases.js"],"names":["React","useSelector","useDispatch","useEffect","ShowCurrentPhrases","upButton","showHidePhrases","showCurrentPhrasesWork","currentPhrases","currentPhrasesServer","phrases_wrapper_visibility","Phrases","store","dispatch","axios","require","makeGetRequest","get","res","data","type","payload","phrases","phrases_button"],"mappings":"6NAAA;AACA;AAEA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAO,eAAP,CAEA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CAEA,OAASC,SAAT,KAA0B,OAA1B,CAEA,OAAUC,kBAAV,KAAoC,6CAApC,CAEA,OAAUC,QAAV,KAA0B,yBAA1B,C,wFAGA,GAAIC,CAAAA,eAAe,CAAe,IAAlC,CAEA,GAAIC,CAAAA,sBAAsB,CAAQ,IAAlC,CAEA,GAAIC,CAAAA,cAAc,CAAgB,IAAlC,CAEA,GAAIC,CAAAA,oBAAoB,CAAU,IAAlC,CAEA,GAAIC,CAAAA,0BAA0B,CAAI,IAAlC,CAGA,MAAO,SAASC,CAAAA,OAAT,EAAmB,CAC1B;AAEIL,eAAe,CAAGL,WAAW,CAAC,SAACW,KAAD,QAAWA,CAAAA,KAAK,CAACN,eAAjB,EAAD,CAA7B,CAEAE,cAAc,CAAGP,WAAW,CAAC,SAACW,KAAD,QAAWA,CAAAA,KAAK,CAACJ,cAAjB,EAAD,CAA5B,CAEAE,0BAA0B,CAAGT,WAAW,CAAC,SAACW,KAAD,QAAWA,CAAAA,KAAK,CAACF,0BAAjB,EAAD,CAAxC,CAEA,GAAIG,CAAAA,QAAQ,CAAGX,WAAW,EAA1B,CAEA,GAAGM,cAAc,GAAK,IAAtB,CAA4B,CACxBC,oBAAoB,CAAG,OAASD,cAAhC,CACH,CAFD,IAEOC,CAAAA,oBAAoB,CAAG,OAAvB,CAGX;AACA;AAGA;AACA;AAEI,GAAMK,CAAAA,KAAK,CAAGC,OAAO,CAAC,OAAD,CAArB,CAvBsB,QAwBPC,CAAAA,cAxBO,oJAwBtB,sKACiBF,CAAAA,KAAK,CAACG,GAAN,CAAUR,oBAAV,CADjB,QACKS,GADL,eAEKC,IAFL,CAEYD,GAAG,CAACC,IAFhB,CAGCN,QAAQ,CAAC,CAACO,IAAI,CAAE,oBAAP,CACRC,OAAO,CAAE,CACRC,OAAO,CAAEH,IADD,CADD,CAAD,CAAR,CAHD,sDAxBsB,iDAiCtBH,cAAc,GAEd,GAAIO,CAAAA,cAAc,cAAG,eAAQ,EAAE,CAAC,iBAAX,CAA8B,OAAO,CAAGlB,QAAxC,gBAArB,CAEA,GAAGC,eAAe,GAAK,iBAAvB,CAA0CC,sBAAsB,cAAG,KAAC,kBAAD,IAAzB,CAA1C,IACK,CACDA,sBAAsB,CAAG,IAAzB,CACAgB,cAAc,CAAW,IAAzB,CACH,CAED,mBAAO,iBAAS,EAAE,CAAC,iBAAZ,WAEFhB,sBAFE,CAGFgB,cAHE,GAAP,CAMH","sourcesContent":["//Phrases.js------------------\n// Show Phrases\n\nimport React from 'react';\n\nimport './Phrases.css';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { useEffect } from 'react';\n\nimport  { ShowCurrentPhrases } from \"../showCurrentPhrases/ShowCurrentPhrases.js\";\n\nimport  { upButton } from \"../upButton/upButton.js\";\n\n\nlet showHidePhrases             = null;\n\nlet showCurrentPhrasesWork      = null;\n\nlet currentPhrases              = null;\n\nlet currentPhrasesServer        = null;\n\nlet phrases_wrapper_visibility  = null;\n\n\nexport function Phrases() {\n//console.log('Phrases +++++++++++')        \n\n    showHidePhrases = useSelector((store) => store.showHidePhrases);\n\n    currentPhrases = useSelector((store) => store.currentPhrases);\n\n    phrases_wrapper_visibility = useSelector((store) => store.phrases_wrapper_visibility);\n\n    let dispatch = useDispatch();\n    \n    if(currentPhrases !== null) {\n        currentPhrasesServer = '/get' + currentPhrases;\n    } else currentPhrasesServer = '/home';\n\n\n//console.log('Phrases: currentPhrases=',currentPhrases);\n//console.log('Phrases: currentPhrasesServer=',currentPhrasesServer);\n\n\n//console.log('Phrases: showHidePhrases=',showHidePhrases);     \n//console.log('Phrases: showCurrentPhrasesWork=',showCurrentPhrasesWork);\n\n    const axios = require('axios');\n    async function makeGetRequest(){\n    \tlet res = await axios.get(currentPhrasesServer);\n    \tlet data = res.data;\n    \tdispatch({type: 'ShowCurrentPhrases',\n    \t\tpayload: {\n    \t\t\tphrases: data\n    \t\t}\n    \t})\n    }\n    makeGetRequest();\n\n    let phrases_button = <button id='footerBtnListen'  onClick= {upButton}>UP</button>;\n\n    if(showHidePhrases === 'showHidePhrases') showCurrentPhrasesWork = <ShowCurrentPhrases />\n    else {\n        showCurrentPhrasesWork = null;\n        phrases_button         = null;\n    } \n\n    return <section id=\"phrases_wrapper\">\n\n        {showCurrentPhrasesWork}\n        {phrases_button}\n\n    </section>    \n}//end of Phrases.js\n\n"]},"metadata":{},"sourceType":"module"}