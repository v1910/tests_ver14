{"ast":null,"code":"//ShowCurrentPhrases.js: show Phrases\nimport React from\"react\";import ReactDOM from'react-dom';import{useSelector,useDispatch}from'react-redux';import'./ShowCurrentPhrases.css';//let currentPhrases     = null;\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var phrases_all=null;export function ShowCurrentPhrases(){//---------------------------------------\n//console.log('ShowCurrentPhrases +++++++++++')  \nvar workPhrases=[];phrases_all=useSelector(function(store){return store.phrases;});//console.log('ShowCurrentPhrases phrases_all=',phrases_all)           \n//console.log('ShowCurrentPhrases phrases_all.length=',phrases_all.length) \nvar phrasesTitleName=phrases_collections[kk-1].toUpperCase();//let phrasesRules     = '';\nfor(var i=0;i<phrases_all.length;i++){//console.log('ShowCurrentPhrases el=',el)  \nworkPhrases.push(/*#__PURE__*/_jsx(\"div\",{class:\"phrases_topic\",children:phrases_all[i].name},i));for(var k=0;k<phrases_all[i].phrases.length;k++){workPhrases.push(/*#__PURE__*/_jsx(\"div\",{class:\"phrases_doc\",children:phrases_all[i].phrases[k]},k));//console.log('ShowCurrentPhrases workPhrases=',workPhrases)\n//console.log('ShowCurrentPhrases result=',result)         \n};//for\n//  result = renderHTML(<div class=\"phrases_cont\">{result}</div>);\n//console.log('ShowCurrentPhrases 2 result=',result)   \n}//for\nvar el=document.getElementById('phrases_wrapper');el.scrollIntoView({block:\"start\",behavior:\"smooth\"});return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{id:\"phrasesTitleName\",children:phrasesTitleName}),workPhrases]});}//---end of ShowCurrentPhrases","map":{"version":3,"sources":["/home/test/Public/tests/src/components/showCurrentPhrases/ShowCurrentPhrases.js"],"names":["React","ReactDOM","useSelector","useDispatch","phrases_all","ShowCurrentPhrases","workPhrases","store","phrases","phrasesTitleName","phrases_collections","kk","toUpperCase","i","length","push","name","k","el","document","getElementById","scrollIntoView","block","behavior"],"mappings":"AAAA;AAEA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CAEA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CAEA,MAAO,0BAAP,CAIA;6IAEA,GAAIC,CAAAA,WAAW,CAAc,IAA7B,CAEA,MAAO,SAASC,CAAAA,kBAAT,EAA8B,CAAG;AAExC;AAEE,GAAIC,CAAAA,WAAW,CAAK,EAApB,CAEAF,WAAW,CAAGF,WAAW,CAAC,SAACK,KAAD,QAAWA,CAAAA,KAAK,CAACC,OAAjB,EAAD,CAAzB,CAEF;AACA;AAGE,GAAIC,CAAAA,gBAAgB,CAAGC,mBAAmB,CAACC,EAAE,CAAC,CAAJ,CAAnB,CAA0BC,WAA1B,EAAvB,CAEA;AAEA,IAAI,GAAIC,CAAAA,CAAC,CAAC,CAAV,CAAaA,CAAC,CAAGT,WAAW,CAACU,MAA7B,CAAqCD,CAAC,EAAtC,CAAyC,CAE3C;AAEIP,WAAW,CAACS,IAAZ,cAAiB,YAAK,KAAK,CAAC,eAAX,UAAoCX,WAAW,CAACS,CAAD,CAAX,CAAeG,IAAnD,EAAgCH,CAAhC,CAAjB,EAEA,IAAI,GAAII,CAAAA,CAAC,CAAC,CAAV,CAAaA,CAAC,CAAGb,WAAW,CAACS,CAAD,CAAX,CAAeL,OAAf,CAAuBM,MAAxC,CAAgDG,CAAC,EAAjD,CAAoD,CAElDX,WAAW,CAACS,IAAZ,cAAiB,YAAK,KAAK,CAAC,aAAX,UAAkCX,WAAW,CAACS,CAAD,CAAX,CAAeL,OAAf,CAAuBS,CAAvB,CAAlC,EAA8BA,CAA9B,CAAjB,EAEN;AAEE;AAEG,EAAC;AAEF;AACA;AACD;AAED,GAAMC,CAAAA,EAAE,CAAGC,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,CAAX,CACAF,EAAE,CAACG,cAAH,CAAkB,CAACC,KAAK,CAAE,OAAR,CAAiBC,QAAQ,CAAE,QAA3B,CAAlB,EAEA,mBAAO,wCACL,YAAK,EAAE,CAAC,kBAAR,UAA4Bd,gBAA5B,EADK,CAEJH,WAFI,GAAP,CAMD","sourcesContent":["//ShowCurrentPhrases.js: show Phrases\n\nimport React from \"react\";\n\nimport ReactDOM from 'react-dom';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport './ShowCurrentPhrases.css';\n\n\n\n//let currentPhrases     = null;\n\nlet phrases_all            = null;\n\nexport function ShowCurrentPhrases() {  //---------------------------------------\n\n//console.log('ShowCurrentPhrases +++++++++++')  \n\n  let workPhrases   = [];\n\n  phrases_all = useSelector((store) => store.phrases);\n\n//console.log('ShowCurrentPhrases phrases_all=',phrases_all)           \n//console.log('ShowCurrentPhrases phrases_all.length=',phrases_all.length) \n\n\n  let phrasesTitleName = phrases_collections[kk-1].toUpperCase();\n\n  //let phrasesRules     = '';\n  \n  for(let i=0; i < phrases_all.length; i++){\n\n//console.log('ShowCurrentPhrases el=',el)  \n\n    workPhrases.push(<div class=\"phrases_topic\" key={i}>{phrases_all[i].name}</div>);\n\n    for(let k=0; k < phrases_all[i].phrases.length; k++){\n\n      workPhrases.push(<div class=\"phrases_doc\" key={k}>{phrases_all[i].phrases[k]}</div>);\n\n//console.log('ShowCurrentPhrases workPhrases=',workPhrases)\n\n  //console.log('ShowCurrentPhrases result=',result)         \n\n    };//for\n\n    //  result = renderHTML(<div class=\"phrases_cont\">{result}</div>);\n    //console.log('ShowCurrentPhrases 2 result=',result)   \n  }//for\n\n  const el = document.getElementById('phrases_wrapper');\n  el.scrollIntoView({block: \"start\", behavior: \"smooth\"});\n\n  return <>\n    <div id='phrasesTitleName'>{phrasesTitleName}</div>\n    {workPhrases}\n  </>\n\n  \n}//---end of ShowCurrentPhrases\n"]},"metadata":{},"sourceType":"module"}